{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/api/action/cart.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { db } from \"~/server/db\";\r\n\r\nexport async function deleteCartProduct(formData: FormData) {\r\n    const fd = z\r\n      .object({\r\n        id: z.string(),\r\n      })\r\n      .parse({\r\n        id: formData.get(\"id\"),\r\n      });\r\n    await db.cartItem.delete({ where: { id: fd.id } });\r\n    redirect(\"/cart\");\r\n  }\r\n\r\n\r\n  export async function updateCartItemQuantity(itemId: string, newQuantity: number) {\r\n    try {\r\n      await db.cartItem.update({\r\n        where: { id: itemId },\r\n        data: { quantity: newQuantity },\r\n      });\r\n  \r\n      revalidatePath(\"/cart\"); // или точный путь, если используется динамика\r\n    } catch (error) {\r\n      console.error(\"Ошибка при обновлении количества:\", error);\r\n      throw new Error(\"Не удалось обновить количество\");\r\n    }\r\n  }\r\n  // export async function addProductDelivery(formData: FormData) {\r\n  //   const fd = z.object({\r\n  //       id: z.string(),\r\n  //     userId: z.string(),\r\n  //     productId: z.string(),\r\n  //     quantity: z.string().transform(Number), \r\n  //     price: z.string().transform(Number),\r\n  //   }).parse({\r\n  //     userId: formData.get(\"userId\"),\r\n  //     productId: formData.get(\"productId\"),\r\n  //     quantity: formData.get(\"quantity\"),\r\n  //     price: formData.get(\"price\"),\r\n  //     id: formData.get(\"id\"),\r\n  //   });\r\n  \r\n    // const order = await db.order.create({\r\n    //   data: {\r\n    //     userId: fd.userId,\r\n    //     totalAmount: fd.price * fd.quantity,\r\n    //   },\r\n    // });\r\n  \r\n    // await db.orderItem.create({\r\n    //   data: {\r\n    //     orderId: order.id,\r\n    //     productId: fd.productId,\r\n    //     quantity: fd.quantity,\r\n    //     price: fd.price,\r\n    //   },\r\n    // });\r\n  //   await db.cartItem.delete({ where: { id: fd.id } });\r\n  //   redirect(\"/cart\");\r\n  // }\r\n\r\n\r\nexport async function addProductDelivery(formData: FormData) {\r\n  // Парсим данные из формы\r\n  const fd = z.object({\r\n    id: z.string(),\r\n    userId: z.string(),\r\n    productId: z.string(),\r\n    quantity: z.string().transform(Number),\r\n    price: z.string().transform(Number),\r\n  }).parse({\r\n    userId: formData.get(\"userId\"),\r\n    productId: formData.get(\"productId\"),\r\n    quantity: formData.get(\"quantity\"),\r\n    price: formData.get(\"price\"),\r\n    id: formData.get(\"id\"),\r\n  });\r\n\r\n  // Получаем информацию о товаре из базы данных\r\n  const product = await db.product.findUnique({\r\n    where: { id: fd.productId },\r\n  });\r\n\r\n  if (product) {\r\n    // Убедитесь, что product не равно null\r\n    const updatedStock = product.stock - fd.quantity;\r\n  \r\n    // Обновляем количество товара в базе данных, если оно больше или равно 0\r\n    if (updatedStock >= 0) {\r\n      await db.product.update({\r\n        where: { id: fd.productId },\r\n        data: {\r\n          stock: updatedStock,\r\n        },\r\n      });\r\n  \r\n      // Оформление заказа и удаление товара из корзины\r\n      const order =  await db.order.create({\r\n        data: {\r\n          userId: fd.userId,\r\n          totalAmount: fd.price * fd.quantity,\r\n        },\r\n      });\r\n  \r\n      await db.orderItem.create({\r\n        data: {\r\n          orderId: order.id,\r\n          productId: fd.productId,\r\n          quantity: fd.quantity,\r\n          price: fd.price,\r\n        },\r\n      });\r\n  \r\n      await db.cartItem.delete({ where: { id: fd.id } });\r\n      redirect(\"/cart\");\r\n    } else {\r\n      throw new Error(\"Недостаточно товара на складе\");\r\n    }\r\n  } else {\r\n    throw new Error(\"Товар не найден\");\r\n  }\r\n}"],"names":[],"mappings":";;;;;;;IAOsB;IAaE;IAgDF"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/cart/cardDelete.tsx"],"sourcesContent":[" \"use client\";\r\n\r\nimport { deleteCartProduct } from \"~/app/api/action/cart\";\r\n\r\nexport default function RemoveFromCartButton({ itemId }: { itemId: string }) {\r\n  return (\r\n    <form action={deleteCartProduct}>\r\n      <input type=\"hidden\" name=\"id\" value={itemId} />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-40 py-2 px-4 bg-red-500 text-white rounded-lg shadow hover:bg-red-600 transition\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFC;;;AAIc,SAAS,qBAAqB,EAAE,MAAM,EAAsB;IACzE,qBACE,6VAAC;QAAK,QAAQ,mIAAA,CAAA,oBAAiB;;0BAC7B,6VAAC;gBAAM,MAAK;gBAAS,MAAK;gBAAK,OAAO;;;;;;0BACtC,6VAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/cart/modal.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Modal({ message, onClose }: { message: string; onClose: () => void }) {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-sm w-full\">\r\n        <h2 className=\"text-xl font-semibold text-center text-purple-600\">{message}</h2>\r\n        <div className=\"flex justify-center mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-purple-600 text-white py-2 px-6 rounded-lg hover:bg-purple-700\"\r\n          >\r\n            Закрыть\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEe,SAAS,MAAM,EAAE,OAAO,EAAE,OAAO,EAA4C;IAC1F,qBACE,6VAAC;QAAI,WAAU;kBACb,cAAA,6VAAC;YAAI,WAAU;;8BACb,6VAAC;oBAAG,WAAU;8BAAqD;;;;;;8BACnE,6VAAC;oBAAI,WAAU;8BACb,cAAA,6VAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/cart/cardUpdate.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { useFormStatus } from \"react-dom\";\r\nimport { addProductDelivery } from \"~/app/api/action/cart\";\r\nimport Modal from \"./modal\";\r\n\r\nexport default function CheckoutButton({\r\n  id,\r\n  userId,\r\n  productId,\r\n  quantity,\r\n  price,\r\n  stock,\r\n}: {\r\n  id: string;\r\n  userId: string;\r\n  productId: string;\r\n  quantity: number;\r\n  price: number;\r\n  stock: number;\r\n}) {\r\n  const { pending } = useFormStatus();\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n  const [showModal, setShowModal] = useState(false); \r\n  const [formPending, setFormPending] = useState(false); \r\n  const [modalMessage, setModalMessage] = useState(\"\"); \r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault(); \r\n    if (stock < quantity) {\r\n      setModalMessage(\"Недостаточно товара на складе\"); \r\n      setShowModal(true); \r\n      return;\r\n    }\r\n\r\n    setFormPending(true); \r\n\r\n    try {\r\n      await addProductDelivery(new FormData(formRef.current!));\r\n      setFormPending(false);\r\n    } catch (error) {\r\n      setFormPending(false);\r\n      setModalMessage(\"Вы заказываете больше товара, чем имеется на складе\"); \r\n      setShowModal(true); \r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <Modal message={modalMessage} onClose={handleCloseModal} /> \r\n      )}\r\n\r\n      <form ref={formRef} onSubmit={handleSubmit}>\r\n        <input type=\"hidden\" name=\"id\" value={id} />\r\n        <input type=\"hidden\" name=\"userId\" value={userId} />\r\n        <input type=\"hidden\" name=\"productId\" value={productId} />\r\n        <input type=\"hidden\" name=\"quantity\" value={quantity} />\r\n        <input type=\"hidden\" name=\"price\" value={price} />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={pending || formPending}\r\n          className=\"w-40 py-2 px-4 bg-purple-600 text-white rounded-lg shadow hover:bg-purple-700 transition disabled:opacity-50\"\r\n        >\r\n          {formPending ? \"Оформляется...\" : \"Оформить заказ\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS,eAAe,EACrC,EAAE,EACF,MAAM,EACN,SAAS,EACT,QAAQ,EACR,KAAK,EACL,KAAK,EAQN;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2TAAA,CAAA,gBAAa,AAAD;IAChC,MAAM,UAAU,CAAA,GAAA,oTAAA,CAAA,SAAM,AAAD,EAAmB;IACxC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,QAAQ,UAAU;YACpB,gBAAgB;YAChB,aAAa;YACb;QACF;QAEA,eAAe;QAEf,IAAI;YACF,MAAM,CAAA,GAAA,mIAAA,CAAA,qBAAkB,AAAD,EAAE,IAAI,SAAS,QAAQ,OAAO;YACrD,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,eAAe;YACf,gBAAgB;YAChB,aAAa;QACf;IACF;IAEA,MAAM,mBAAmB;QACvB,aAAa;IACf;IAEA,qBACE,6VAAC;;YACE,2BACC,6VAAC,2IAAA,CAAA,UAAK;gBAAC,SAAS;gBAAc,SAAS;;;;;;0BAGzC,6VAAC;gBAAK,KAAK;gBAAS,UAAU;;kCAC5B,6VAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAK,OAAO;;;;;;kCACtC,6VAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAS,OAAO;;;;;;kCAC1C,6VAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAY,OAAO;;;;;;kCAC7C,6VAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAW,OAAO;;;;;;kCAC5C,6VAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAQ,OAAO;;;;;;kCAEzC,6VAAC;wBACC,MAAK;wBACL,UAAU,WAAW;wBACrB,WAAU;kCAET,cAAc,mBAAmB;;;;;;;;;;;;;;;;;;AAK5C"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/cart/updateQuantity.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useTransition } from \"react\";\r\nimport { updateCartItemQuantity } from \"~/app/api/action/cart\";\r\n\r\nexport default function QuantityControl({\r\n  itemId,\r\n  quantity,\r\n  stock,\r\n}: {itemId: string,\r\n  quantity: number,\r\n  stock: number}) {\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const handleChange = (delta: number) => {\r\n    const newQuantity = quantity + delta;\r\n    if (newQuantity < 1 || newQuantity > stock) return;\r\n\r\n    startTransition(() => {\r\n      updateCartItemQuantity(itemId, newQuantity);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <button\r\n        onClick={() => handleChange(-1)}\r\n        disabled={quantity <= 1 || isPending}\r\n        className=\"px-2 py-1 bg-red-200 text-gray-800 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n      >\r\n        –\r\n      </button>\r\n      <span className=\"min-w-[24px] text-center\">{quantity}</span>\r\n      <button\r\n        onClick={() => handleChange(1)}\r\n        disabled={quantity >= stock || isPending}\r\n        className=\"px-2 py-1 bg-red-200 text-gray-800 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,gBAAgB,EACtC,MAAM,EACN,QAAQ,EACR,KAAK,EAGS;IACd,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,oTAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc,WAAW;QAC/B,IAAI,cAAc,KAAK,cAAc,OAAO;QAE5C,gBAAgB;YACd,CAAA,GAAA,mIAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ;QACjC;IACF;IAEA,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC;gBACC,SAAS,IAAM,aAAa,CAAC;gBAC7B,UAAU,YAAY,KAAK;gBAC3B,WAAU;0BACX;;;;;;0BAGD,6VAAC;gBAAK,WAAU;0BAA4B;;;;;;0BAC5C,6VAAC;gBACC,SAAS,IAAM,aAAa;gBAC5B,UAAU,YAAY,SAAS;gBAC/B,WAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}