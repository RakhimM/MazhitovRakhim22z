{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/productUI.tsx"],"sourcesContent":["// import { notFound } from \"next/navigation\";\r\n\r\n// export default async function ProductDetails({ product }: { product: any }) {\r\n//   if (!product) return notFound();\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto py-8 px-6 max-w-3xl\">\r\n//       <h1 className=\"text-4xl font-extrabold text-gray-900 mb-6\">{product.name}</h1>\r\n\r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <img\r\n//           src={product.imageUrl || undefined}\r\n//           alt={product.name}\r\n//           className=\"w-full max-w-lg rounded-lg shadow-xl\"\r\n//         />\r\n//       </div>\r\n\r\n//       <p className=\"text-lg text-gray-800 mb-4\">{product.description}</p>\r\n\r\n//       <div className=\"flex items-center justify-between mb-6\">\r\n//         <p className=\"text-2xl font-semibold text-blue-600\">\r\n//           {Number(product.price.toString()).toLocaleString(\"ru-RU\", {\r\n//             style: \"currency\",\r\n//             currency: \"RUB\",\r\n//           })}\r\n//         </p>\r\n//       </div>\r\n\r\n//       <div className=\"bg-gray-100 p-4 rounded-lg shadow-md mb-6\">\r\n//         <p className=\"text-sm text-gray-500 mb-1\">\r\n//           <strong>Категория:</strong> <span className=\"font-medium\">{product.category.name}</span>\r\n//         </p>\r\n//         <p className=\"text-sm text-gray-500 mb-1\">\r\n//           <strong>На складе:</strong> <span className=\"font-medium\">{product.stock}</span>\r\n//         </p>\r\n//         <p className=\"text-sm text-gray-500 mb-1\">\r\n//           <strong>Создано:</strong>{\" \"}\r\n//           {new Date(product.createdAt).toLocaleDateString(\"ru-RU\", {\r\n//             day: \"numeric\",\r\n//             month: \"long\",\r\n//             year: \"numeric\",\r\n//           })}\r\n//         </p>\r\n//         <p className=\"text-sm text-gray-500 mb-4\">\r\n//           <strong>Обновлено:</strong>{\" \"}\r\n//           {new Date(product.updatedAt).toLocaleDateString(\"ru-RU\", {\r\n//             day: \"numeric\",\r\n//             month: \"long\",\r\n//             year: \"numeric\",\r\n//           })}\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport { notFound } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\"; // ✅ Правильно для app/\r\n\r\nexport default function ProductDetails({ product }: { product: any }) {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const router = useRouter(); // ✅ useRouter из next/navigation\r\n\r\n  if (!product) return notFound();\r\n\r\n  const images = product.images?.length\r\n    ? product.images\r\n    : [{ url: product.imageUrl || \"/placeholder-product.jpg\" }];\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-6 max-w-3xl\">\r\n          <div className=\"mb-8\">\r\n        <button\r\n          onClick={() => router.back()} // <== заменяем Link на кнопку\r\n          className=\"text-purple-600 hover:text-purple-800 transition-colors flex items-center\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n          Назад\r\n        </button>\r\n      </div>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-900 mb-6\">{product.name}</h1>\r\n\r\n      <div className=\"relative w-full overflow-hidden rounded-lg bg-gray-100 aspect-[4/3] mb-6\">\r\n        <div\r\n          className=\"flex transition-transform duration-300 ease-in-out\"\r\n          style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n        >\r\n          {images.map((img: any, idx: number) => (\r\n            <img\r\n              key={idx}\r\n              src={img.url}\r\n              alt={product.name}\r\n              className=\"w-full h-full object-cover shrink-0 grow-0 basis-full\"\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {images.length > 1 && (\r\n          <>\r\n            <button\r\n              onClick={() =>\r\n                setCurrentSlide((prev) => (prev - 1 + images.length) % images.length)\r\n              }\r\n              className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/80 px-2 py-1 rounded-full shadow\"\r\n            >\r\n              ‹\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                setCurrentSlide((prev) => (prev + 1) % images.length)\r\n              }\r\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/80 px-2 py-1 rounded-full shadow\"\r\n            >\r\n              ›\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <p className=\"text-lg text-gray-800 mb-4\">{product.description}</p>\r\n\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <p className=\"text-2xl font-semibold text-blue-600\">\r\n          {Number(product.price.toString()).toLocaleString(\"ru-RU\", {\r\n            style: \"currency\",\r\n            currency: \"RUB\",\r\n          })}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"bg-gray-100 p-4 rounded-lg shadow-md mb-6\">\r\n        <p className=\"text-sm text-gray-500 mb-1\">\r\n          <strong>Категория:</strong> <span className=\"font-medium\">{product.category.name}</span>\r\n        </p>\r\n        <p className=\"text-sm text-gray-500 mb-1\">\r\n          <strong>На складе:</strong> <span className=\"font-medium\">{product.stock}</span>\r\n        </p>\r\n        <p className=\"text-sm text-gray-500 mb-1\">\r\n          <strong>Создано:</strong>{\" \"}\r\n          {new Date(product.createdAt).toLocaleDateString(\"ru-RU\", {\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          })}\r\n        </p>\r\n        <p className=\"text-sm text-gray-500 mb-4\">\r\n          <strong>Обновлено:</strong>{\" \"}\r\n          {new Date(product.updatedAt).toLocaleDateString(\"ru-RU\", {\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          })}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/api/action/product.ts"],"sourcesContent":["// \"use server\";\r\n\r\n// import { revalidatePath } from \"next/cache\";\r\n// import { redirect } from \"next/navigation\";\r\n// import { z } from \"zod\";\r\n// import { auth } from \"~/server/auth\";\r\n// import { db } from \"~/server/db\";\r\n// import { createClient } from '@supabase/supabase-js';\r\n// export async function createProduct(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       name: z.string(),\r\n//       description: z.string(),\r\n//       price: z.coerce.number().positive(),\r\n//       imageUrl: z.string().url().optional().or(z.literal(\"\")),\r\n//       categoryId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.create({\r\n//     data: {\r\n//       name: fd.name,\r\n//       description: fd.description,\r\n//       price: fd.price,\r\n//       imageUrl: fd.imageUrl || \"\",\r\n//       categoryId: fd.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(\"/product\");\r\n//   redirect(\"/product\"); \r\n// }\r\n// const supabase = createClient(\r\n//   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n// );\r\n\r\n// // export async function createProduct(formData: FormData) {\r\n// //   const name = formData.get(\"name\") as string;\r\n// //   const description = formData.get(\"description\") as string;\r\n// //   const price = parseFloat(formData.get(\"price\") as string);\r\n// //   const categoryId = formData.get(\"categoryId\") as string;\r\n// //   const file = formData.get(\"image\") as File;\r\n\r\n// //   if (!file || file.size === 0) throw new Error(\"Файл изображения не выбран\");\r\n\r\n// //   const filePath = `products/${Date.now()}-${file.name}`;\r\n\r\n// //   // Загрузка в Supabase Storage\r\n// //   const { error: uploadError } = await supabase.storage\r\n// //     .from('product-images')\r\n// //     .upload(filePath, file, { upsert: true });\r\n\r\n// //   if (uploadError) throw uploadError;\r\n\r\n// //   const { data: imageData } = supabase\r\n// //     .storage\r\n// //     .from('product-images')\r\n// //     .getPublicUrl(filePath);\r\n\r\n// //   const imageUrl = imageData?.publicUrl;\r\n\r\n// //   if (!imageUrl) throw new Error(\"Не удалось получить URL изображения\");\r\n\r\n// //   // Сохранение в PostgreSQL\r\n// //   await db.product.create({\r\n// //     data: {\r\n// //       name,\r\n// //       description,\r\n// //       price,\r\n// //       categoryId,\r\n// //       imageUrl,\r\n// //     },\r\n// //   });\r\n\r\n// //   redirect('/admin/products'); // или куда тебе нужно\r\n// // }\r\n\r\n// export async function updateProduct(formData: FormData) {\r\n//   const data = z\r\n//     .object({\r\n//       id: z.string(),\r\n//       name: z.string(),\r\n//       description: z.string().optional(),\r\n//       price: z.coerce.number().nonnegative(),\r\n//       imageUrl: z.string().url().optional(),\r\n//       categoryId: z.string().optional(),\r\n//     })\r\n//     .parse({\r\n//       id: formData.get(\"id\"),\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.update({\r\n//     where: { id: data.id },\r\n//     data: {\r\n//       name: data.name,\r\n//       description: data.description,\r\n//       price: data.price,\r\n//       imageUrl: data.imageUrl,\r\n//       categoryId: data.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(`/products/${data.id}`); \r\n// }\r\n\r\n// export async function deleteProduct(formData: FormData) {\r\n//     const fd = z\r\n//       .object({\r\n//         id: z.string(),\r\n//       })\r\n//       .parse({\r\n//         id: formData.get(\"id\"),\r\n//       });\r\n//     await db.product.delete({ where: { id: fd.id } });\r\n//     redirect(\"/product\");\r\n//   }\r\n\r\n\r\n// export async function addProductCart(formData: FormData) {\r\n//   const session = await auth();\r\n\r\n//   if (!session?.user?.id) {\r\n//     throw new Error(\"Пользователь не авторизован\");\r\n//   }\r\n\r\n//   const { productId } = z\r\n//     .object({\r\n//       productId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       productId: formData.get(\"productId\"),\r\n//     });\r\n\r\n//   const existingCartItem = await db.cartItem.findFirst({\r\n//     where: {\r\n//       userId: session.user.id,\r\n//       productId,\r\n//     },\r\n//   });\r\n\r\n//   if (existingCartItem) {\r\n//     await db.cartItem.update({\r\n//       where: { id: existingCartItem.id },\r\n//       data: { quantity: { increment: 1 } },\r\n//     });\r\n//   } else {\r\n//     await db.cartItem.create({\r\n//       data: {\r\n//         userId: session.user.id,\r\n//         productId,\r\n//         quantity: 1,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//    redirect(\"/cart\");\r\n// }\r\n\"use server\";\r\n\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { auth } from \"~/server/auth\";\r\nimport { db } from \"~/server/db\";\r\n\r\n// export async function createProduct(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       name: z.string(),\r\n//       description: z.string(),\r\n//       price: z.coerce.number().positive(),\r\n//       imageUrl: z.string().url().optional().or(z.literal(\"\")),\r\n//       categoryId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.create({\r\n//     data: {\r\n//       name: fd.name,\r\n//       description: fd.description,\r\n//       price: fd.price,\r\n//       imageUrl: fd.imageUrl || \"\",\r\n//       categoryId: fd.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(\"/product\");\r\n//   redirect(\"/product\"); \r\n// }\r\n// export async function createProduct(formData: FormData) {\r\n//   const name = formData.get(\"name\") as string;\r\n//   const description = formData.get(\"description\") as string;\r\n//   const price = Number(formData.get(\"price\"));\r\n//   const categoryId = formData.get(\"categoryId\") as string;\r\n//   const imageUrl = formData.get(\"imageUrl\") as string;\r\n\r\n//   if (!imageUrl) throw new Error(\"Изображение не выбрано\");\r\n\r\n//   await db.product.create({\r\n//     data: {\r\n//       name,\r\n//       description,\r\n//       price,\r\n//       categoryId,\r\n//       imageUrl,\r\n//     },\r\n//   });\r\n\r\n//   redirect(\"/product\");\r\n// }\r\nexport async function createProduct(formData: FormData) {\r\n  const name = formData.get(\"name\") as string;\r\n  const description = formData.get(\"description\") as string;\r\n  const price = Number(formData.get(\"price\"));\r\n  const stock = Number(formData.get(\"stock\"));\r\n  const categoryId = formData.get(\"categoryId\") as string;\r\n  const imageUrls = formData.getAll(\"imageUrls\") as string[];\r\n\r\n  if (!imageUrls.length) throw new Error(\"Не выбраны изображения\");\r\n\r\n  const product = await db.product.create({\r\n    data: {\r\n      name,\r\n      description,\r\n      price,\r\n      stock,\r\n      categoryId,\r\n      images: {\r\n        create: imageUrls.map((url) => ({ url })),\r\n      },\r\n    },\r\n  });\r\n\r\n  redirect(`/product/${product.id}`);\r\n}\r\n\r\nconst productUpdateSchema = z.object({\r\n  id: z.string().cuid(),\r\n  name: z.string().min(1),\r\n  description: z.string().optional(),\r\n  price: z.number().nonnegative(),\r\n  imageUrl: z.string().url().optional(),\r\n  categoryId: z.string().cuid(),\r\n});\r\n\r\n export async function updateProduct(data: unknown) {\r\n  // Валидируем входные данные, чтобы получить типизированный объект\r\n  const parsedData = productUpdateSchema.parse(data);\r\n\r\n  // Формируем массив для создания изображений, если URL валиден\r\n  const imagesData = parsedData.imageUrl ? [{ url: parsedData.imageUrl }] : [];\r\n\r\n  await db.product.update({\r\n    where: { id: parsedData.id },\r\n    data: {\r\n      name: parsedData.name,\r\n      description: parsedData.description,\r\n      price: parsedData.price,\r\n      images: {\r\n        deleteMany: {},\r\n        create: imagesData,\r\n      },\r\n      categoryId: parsedData.categoryId,\r\n    },\r\n  });\r\n}\r\nexport async function deleteProduct(formData: FormData) {\r\n    const fd = z\r\n      .object({\r\n        id: z.string(),\r\n      })\r\n      .parse({\r\n        id: formData.get(\"id\"),\r\n      });\r\n    await db.product.delete({ where: { id: fd.id } });\r\n    redirect(\"/product\");\r\n  }\r\n\r\n\r\n// export async function addProductCart(formData: FormData) {\r\n//   const session = await auth();\r\n\r\n//   if (!session?.user?.id) {\r\n//     throw new Error(\"Пользователь не авторизован\");\r\n//   }\r\n\r\n//   const { productId } = z\r\n//     .object({\r\n//       productId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       productId: formData.get(\"productId\"),\r\n//     });\r\n\r\n//   const existingCartItem = await db.cartItem.findFirst({\r\n//     where: {\r\n//       userId: session.user.id,\r\n//       productId,\r\n//     },\r\n//   });\r\n\r\n//   if (existingCartItem) {\r\n//     await db.cartItem.update({\r\n//       where: { id: existingCartItem.id },\r\n//       data: { quantity: { increment: 1 } },\r\n//     });\r\n//   } else {\r\n//     await db.cartItem.create({\r\n//       data: {\r\n//         userId: session.user.id,\r\n//         productId,\r\n//         quantity: 1,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//    redirect(\"/cart\");\r\n// }\r\nexport async function addProductCart(formData: FormData) {\r\n  const session = await auth();\r\n\r\n  if (!session?.user?.id) {\r\n    throw new Error(\"Пользователь не авторизован\");\r\n  }\r\n\r\n  const { productId, quantity } = z\r\n    .object({\r\n      productId: z.string(),\r\n      quantity: z.string().transform((val) => parseInt(val, 10)),\r\n    })\r\n    .parse({\r\n      productId: formData.get(\"productId\"),\r\n      quantity: formData.get(\"quantity\"),\r\n    });\r\n\r\n  const existingCartItem = await db.cartItem.findFirst({\r\n    where: {\r\n      userId: session.user.id,\r\n      productId,\r\n    },\r\n  });\r\n\r\n  if (existingCartItem) {\r\n    await db.cartItem.update({\r\n      where: { id: existingCartItem.id },\r\n      data: { quantity: { increment: quantity } },\r\n    });\r\n  } else {\r\n    await db.cartItem.create({\r\n      data: {\r\n        userId: session.user.id,\r\n        productId,\r\n        quantity,\r\n      },\r\n    });\r\n  }\r\n\r\n  redirect(\"/cart\");\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAC/C,8CAA8C;AAC9C,2BAA2B;AAC3B,wCAAwC;AACxC,oCAAoC;AACpC,wDAAwD;AACxD,4DAA4D;AAC5D,iBAAiB;AACjB,gBAAgB;AAChB,0BAA0B;AAC1B,iCAAiC;AACjC,6CAA6C;AAC7C,iEAAiE;AACjE,gCAAgC;AAChC,SAAS;AACT,eAAe;AACf,oCAAoC;AACpC,kDAAkD;AAClD,sCAAsC;AACtC,4CAA4C;AAC5C,gDAAgD;AAChD,UAAU;AAEV,8BAA8B;AAC9B,cAAc;AACd,uBAAuB;AACvB,qCAAqC;AACrC,yBAAyB;AACzB,qCAAqC;AACrC,mCAAmC;AACnC,SAAS;AACT,QAAQ;AAER,gCAAgC;AAChC,2BAA2B;AAC3B,IAAI;AACJ,iCAAiC;AACjC,2CAA2C;AAC3C,+CAA+C;AAC/C,KAAK;AAEL,+DAA+D;AAC/D,oDAAoD;AACpD,kEAAkE;AAClE,kEAAkE;AAClE,gEAAgE;AAChE,mDAAmD;AAEnD,oFAAoF;AAEpF,+DAA+D;AAE/D,sCAAsC;AACtC,6DAA6D;AAC7D,iCAAiC;AACjC,oDAAoD;AAEpD,2CAA2C;AAE3C,4CAA4C;AAC5C,kBAAkB;AAClB,iCAAiC;AACjC,kCAAkC;AAElC,8CAA8C;AAE9C,8EAA8E;AAE9E,kCAAkC;AAClC,iCAAiC;AACjC,iBAAiB;AACjB,iBAAiB;AACjB,wBAAwB;AACxB,kBAAkB;AAClB,uBAAuB;AACvB,qBAAqB;AACrB,YAAY;AACZ,WAAW;AAEX,2DAA2D;AAC3D,OAAO;AAEP,4DAA4D;AAC5D,mBAAmB;AACnB,gBAAgB;AAChB,wBAAwB;AACxB,0BAA0B;AAC1B,4CAA4C;AAC5C,gDAAgD;AAChD,+CAA+C;AAC/C,2CAA2C;AAC3C,SAAS;AACT,eAAe;AACf,gCAAgC;AAChC,oCAAoC;AACpC,kDAAkD;AAClD,sCAAsC;AACtC,4CAA4C;AAC5C,gDAAgD;AAChD,UAAU;AAEV,8BAA8B;AAC9B,8BAA8B;AAC9B,cAAc;AACd,yBAAyB;AACzB,uCAAuC;AACvC,2BAA2B;AAC3B,iCAAiC;AACjC,qCAAqC;AACrC,SAAS;AACT,QAAQ;AAER,6CAA6C;AAC7C,IAAI;AAEJ,4DAA4D;AAC5D,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,WAAW;AACX,iBAAiB;AACjB,kCAAkC;AAClC,YAAY;AACZ,yDAAyD;AACzD,4BAA4B;AAC5B,MAAM;AAGN,6DAA6D;AAC7D,kCAAkC;AAElC,8BAA8B;AAC9B,sDAAsD;AACtD,MAAM;AAEN,4BAA4B;AAC5B,gBAAgB;AAChB,+BAA+B;AAC/B,SAAS;AACT,eAAe;AACf,8CAA8C;AAC9C,UAAU;AAEV,2DAA2D;AAC3D,eAAe;AACf,iCAAiC;AACjC,mBAAmB;AACnB,SAAS;AACT,QAAQ;AAER,4BAA4B;AAC5B,iCAAiC;AACjC,4CAA4C;AAC5C,8CAA8C;AAC9C,UAAU;AACV,aAAa;AACb,iCAAiC;AACjC,gBAAgB;AAChB,mCAAmC;AACnC,qBAAqB;AACrB,uBAAuB;AACvB,WAAW;AACX,UAAU;AACV,MAAM;AAEN,wBAAwB;AACxB,IAAI;;;;;;;;;IA2DkB;IAmCC;IAqBD;IAoDA"}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/addToCartButton.tsx"],"sourcesContent":["// //  \"use client\";\r\n\r\n// // import { addProductCart } from \"~/app/api/action/product\";\r\n\r\n// // export default function ProductPage({ productId }: { productId: string }) {\r\n// //   return (\r\n// //     <form action={addProductCart} className=\"mt-4 flex justify-center\">\r\n// //       <input type=\"hidden\" name=\"productId\" value={productId} />\r\n// //       <button type=\"submit\" className=\"btn btn-primary py-2 px-6 text-lg\">\r\n// //         Добавить в корзину\r\n// //       </button>\r\n// //     </form>\r\n// //   );\r\n// // }\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { addProductCart } from \"~/app/api/action/product\";\r\n\r\n// export default function ProductPage({ productId, stock }: { productId: string, stock: num }) {\r\n//   const [quantity, setQuantity] = useState(1);\r\n\r\n//   const increase = () => setQuantity((q) => q + 1);\r\n//   const decrease = () => setQuantity((q) => (q > 1 ? q - 1 : 1));\r\n\r\n//   return (\r\n//     <form\r\n//       action={addProductCart}\r\n//       className=\"mt-6 flex flex-col items-center gap-6 rounded-xl border p-6 shadow-md\"\r\n//     >\r\n//       <input type=\"hidden\" name=\"productId\" value={productId} />\r\n//       <input type=\"hidden\" name=\"quantity\" value={quantity} />\r\n\r\n//       <div className=\"flex flex-col items-center gap-2\">\r\n//         <span className=\"text-lg font-medium text-gray-700\">Количество</span>\r\n//         <div className=\"flex items-center rounded-full border bg-white px-4 py-2 shadow-sm\">\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={decrease}\r\n//             className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n//           >\r\n//             −\r\n//           </button>\r\n//           <span className=\"mx-4 w-6 text-center text-lg font-medium\">{quantity}</span>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={increase}\r\n//             className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n//           >\r\n//             +\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         type=\"submit\"\r\n//         className=\"rounded-full bg-blue-600 px-6 py-3 text-lg font-semibold text-white transition hover:bg-blue-700\"\r\n//       >\r\n//         Добавить в корзину\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n//  \"use client\";\r\n\r\n// import { addProductCart } from \"~/app/api/action/product\";\r\n\r\n// export default function ProductPage({ productId }: { productId: string }) {\r\n//   return (\r\n//     <form action={addProductCart} className=\"mt-4 flex justify-center\">\r\n//       <input type=\"hidden\" name=\"productId\" value={productId} />\r\n//       <button type=\"submit\" className=\"btn btn-primary py-2 px-6 text-lg\">\r\n//         Добавить в корзину\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n// \"use client\";\r\n\r\n// import { useState, useTransition } from \"react\";\r\n// import { addProductCart } from \"~/app/api/action/product\";\r\n\r\n// export default function ProductPage({ productId, stock }: { productId: string, stock: number }) {\r\n//   const [quantity, setQuantity] = useState(1);\r\n//   const [isPending, startTransition] = useTransition();\r\n//   const increase = () => setQuantity((q) => q + 1);\r\n//   const decrease = () => setQuantity((q) => (q > 1 ? q - 1 : 1));\r\n//   const handleChange = (delta: number) => {\r\n//     const newQuantity = quantity + delta;\r\n//     if (newQuantity < 1 || newQuantity > stock) \r\n//     return newQuantity;\r\n//     // startTransition(() => {\r\n//     //   return \r\n//     // });\r\n\r\n//   };\r\n//   return (\r\n//     <form\r\n//       action={addProductCart}\r\n//       className=\"mt-6 flex flex-col items-center gap-6 rounded-xl border p-6 shadow-md\"\r\n//     >\r\n//       <input type=\"hidden\" name=\"productId\" value={productId} />\r\n//       <input type=\"hidden\" name=\"quantity\" value={quantity} />\r\n\r\n//       <div className=\"flex flex-col items-center gap-2\">\r\n//         <span className=\"text-lg font-medium text-gray-700\">Количество</span>\r\n//         <div className=\"flex items-center rounded-full border bg-white px-4 py-2 shadow-sm\">\r\n//           <button\r\n//             type=\"button\"\r\n//             disabled={quantity <= 1 || isPending}\r\n//             onClick={(quantity)=>handleChange(-1)}\r\n//             className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n//           >\r\n//             −\r\n//           </button>\r\n//           <span className=\"mx-4 w-6 text-center text-lg font-medium\">{quantity}</span>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={(quantity)=>handleChange(1)}\r\n//             disabled={quantity >= stock || isPending}\r\n//             className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n//           >\r\n//             +\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         type=\"submit\"\r\n//         className=\"rounded-full bg-blue-600 px-6 py-3 text-lg font-semibold text-white transition hover:bg-blue-700\"\r\n//       >\r\n//         Добавить в корзину\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n\"use client\";\r\n\r\nimport { startTransition, useState } from \"react\";\r\nimport { addProductCart } from \"~/app/api/action/product\";\r\n\r\nexport default function ProductPage({ productId, stock }: { productId: string, stock: number }) {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const increase = () => {\r\n    if (quantity < stock) {\r\n      startTransition(() => setQuantity((q) => q + 1));\r\n    }\r\n  };\r\n  const decrease = () => {\r\n    if (quantity > 1) {\r\n      startTransition(() => setQuantity((q) => q - 1));\r\n    }\r\n  };\r\n  // const increase = () => setQuantity((q) => q + 1 );\r\n  // const decrease = () => setQuantity((q) => (q > 1  ? q - 1 : 1));\r\n\r\n  return (\r\n    <form\r\n      action={addProductCart}\r\n      className=\"mt-6 flex flex-col items-center gap-6 rounded-xl border p-6 shadow-md\"\r\n    >\r\n      <input type=\"hidden\" name=\"productId\" value={productId} />\r\n      <input type=\"hidden\" name=\"quantity\" value={quantity} />\r\n\r\n      <div className=\"flex flex-col items-center gap-2\">\r\n        <span className=\"text-lg font-medium text-gray-700\">Количество</span>\r\n        <div className=\"flex items-center rounded-full border bg-white px-4 py-2 shadow-sm\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={decrease}\r\n            className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n          >\r\n            −\r\n          </button>\r\n          <span className=\"mx-4 w-6 text-center text-lg font-medium\">{quantity}</span>\r\n          <button\r\n            type=\"button\"\r\n            onClick={increase}\r\n            className=\"text-xl font-bold text-gray-600 hover:text-black focus:outline-none\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"rounded-full bg-blue-600 px-6 py-3 text-lg font-semibold text-white transition hover:bg-blue-700\"\r\n      >\r\n        Добавить в корзину\r\n      </button>\r\n    </form>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    AUTH_SECRET:\n      process.env.NODE_ENV === \"production\"\n        ? z.string()\n        : z.string().optional(),\n    EMAIL_SERVER: z.string(),\n    EMAIL_FROM: z.string(),\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    AUTH_SECRET: process.env.AUTH_SECRET,\n    EMAIL_SERVER: process.env.EMAIL_SERVER,\n    EMAIL_FROM: process.env.EMAIL_FROM,\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,qRAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,aACE,6EAEI,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACzB,cAAc,qLAAA,CAAA,IAAC,CAAC,MAAM;QACtB,YAAY,qLAAA,CAAA,IAAC,CAAC,MAAM;QACpB,cAAc,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,qLAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,aAAa,QAAQ,GAAG,CAAC,WAAW;QACpC,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,YAAY,QAAQ,GAAG,CAAC,UAAU;QAClC,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IACV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B"}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"~/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/mailers/auth-mailer.ts"],"sourcesContent":["import { createTransport } from \"nodemailer\"\r\nimport type { NodemailerConfig } from \"next-auth/providers/nodemailer\";\r\n\r\ntype SendVerificationRequestParams = \r\n    Parameters<NodemailerConfig[\"sendVerificationRequest\"]>[0] \r\n\r\nexport async function sendVerificationRequest(params: SendVerificationRequestParams) {\r\n  const { identifier, url, provider, theme } = params\r\n  const { host } = new URL(url)\r\n  // NOTE: You are not required to use `nodemailer`, use whatever you want.\r\n  const transport = createTransport(provider.server)\r\n  const result = await transport.sendMail({\r\n    to: identifier,\r\n    from: provider.from,\r\n    subject: `Sign in to ${host}`,\r\n    text: text({ url, host }),\r\n    html: html({ url, host, theme }),\r\n  })\r\n  const failed = result.rejected.concat(result.pending).filter(Boolean)\r\n  if (failed.length) {\r\n    throw new Error(`Email(s) (${failed.join(\", \")}) could not be sent`)\r\n  }\r\n}\r\n\r\n/**\r\n * Email HTML body\r\n * Insert invisible space into domains from being turned into a hyperlink by email\r\n * clients like Outlook and Apple mail, as this is confusing because it seems\r\n * like they are supposed to click on it to sign in.\r\n *\r\n * @note We don't add the email address to avoid needing to escape it, if you do, remember to sanitize it!\r\n */\r\nfunction html(params: { url: string, host: string, theme: { brandColor?: string, buttonText?: string} }) {\r\n  const { url, host, theme } = params\r\n\r\n  const escapedHost = host.replace(/\\./g, \"&#8203;.\")\r\n\r\n  const brandColor = theme.brandColor ?? \"#346df1\"\r\n  const color = {\r\n    background: \"#f9f9f9\",\r\n    text: \"#444\",\r\n    mainBackground: \"#fff\",\r\n    buttonBackground: brandColor,\r\n    buttonBorder: brandColor,\r\n    buttonText: theme.buttonText ?? \"#fff\",\r\n  }\r\n\r\n  return `\r\n<body style=\"background: ${color.background};\">\r\n  <table width=\"100%\" border=\"0\" cellspacing=\"20\" cellpadding=\"0\"\r\n    style=\"background: ${color.mainBackground}; max-width: 600px; margin: auto; border-radius: 10px;\">\r\n    <tr>\r\n      <td align=\"center\"\r\n        style=\"padding: 10px 0px; font-size: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};\">\r\n        Sign in to <strong>${escapedHost}</strong>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"center\" style=\"padding: 20px 0;\">\r\n        <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n          <tr>\r\n            <td align=\"center\" style=\"border-radius: 5px;\" bgcolor=\"${color.buttonBackground}\"><a href=\"${url}\"\r\n                target=\"_blank\"\r\n                style=\"font-size: 18px; font-family: Helvetica, Arial, sans-serif; color: ${color.buttonText}; text-decoration: none; border-radius: 5px; padding: 10px 20px; border: 1px solid ${color.buttonBorder}; display: inline-block; font-weight: bold;\">Sign\r\n                in</a></td>\r\n          </tr>\r\n        </table>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"center\"\r\n        style=\"padding: 0px 0px 10px 0px; font-size: 16px; line-height: 22px; font-family: Helvetica, Arial, sans-serif; color: ${color.text};\">\r\n        If you did not request this email you can safely ignore it.\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</body>\r\n`\r\n}\r\n\r\n/** Email Text body (fallback for email clients that don't render HTML, e.g. feature phones) */\r\nfunction text({ url, host }: { url: string, host: string }) {\r\n  return `Sign in to ${host}\\n${url}\\n\\n`\r\n}"],"names":[],"mappings":";;;AAAA;;AAMO,eAAe,wBAAwB,MAAqC;IACjF,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG;IAC7C,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;IACzB,yEAAyE;IACzE,MAAM,YAAY,CAAA,GAAA,uMAAA,CAAA,kBAAe,AAAD,EAAE,SAAS,MAAM;IACjD,MAAM,SAAS,MAAM,UAAU,QAAQ,CAAC;QACtC,IAAI;QACJ,MAAM,SAAS,IAAI;QACnB,SAAS,CAAC,WAAW,EAAE,MAAM;QAC7B,MAAM,KAAK;YAAE;YAAK;QAAK;QACvB,MAAM,KAAK;YAAE;YAAK;YAAM;QAAM;IAChC;IACA,MAAM,SAAS,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,OAAO,EAAE,MAAM,CAAC;IAC7D,IAAI,OAAO,MAAM,EAAE;QACjB,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE,OAAO,IAAI,CAAC,MAAM,mBAAmB,CAAC;IACrE;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,MAAyF;IACrG,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG;IAE7B,MAAM,cAAc,KAAK,OAAO,CAAC,OAAO;IAExC,MAAM,aAAa,MAAM,UAAU,IAAI;IACvC,MAAM,QAAQ;QACZ,YAAY;QACZ,MAAM;QACN,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;QACd,YAAY,MAAM,UAAU,IAAI;IAClC;IAEA,OAAO,CAAC;yBACe,EAAE,MAAM,UAAU,CAAC;;uBAErB,EAAE,MAAM,cAAc,CAAC;;;qGAGuD,EAAE,MAAM,IAAI,CAAC;2BACvF,EAAE,YAAY;;;;;;;oEAO2B,EAAE,MAAM,gBAAgB,CAAC,WAAW,EAAE,IAAI;;0FAEpB,EAAE,MAAM,UAAU,CAAC,mFAAmF,EAAE,MAAM,YAAY,CAAC;;;;;;;;gIAQrF,EAAE,MAAM,IAAI,CAAC;;;;;;AAM7I,CAAC;AACD;AAEA,6FAA6F,GAC7F,SAAS,KAAK,EAAE,GAAG,EAAE,IAAI,EAAiC;IACxD,OAAO,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,IAAI,IAAI,CAAC;AACzC"}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1051, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/server/auth/config.ts"],"sourcesContent":["// import { PrismaAdapter } from \"@auth/prisma-adapter\";\n// import { type DefaultSession, type NextAuthConfig } from \"next-auth\";\n// import EmailProvider from \"next-auth/providers/nodemailer\";\n// import DiscordProvider from \"next-auth/providers/discord\";\n\n// import { db } from \"~/server/db\";\n// import { sendVerificationRequest } from \"~/mailers/auth-mailer\";\n// import { $Enums } from \"@prisma/client\";\n\n// /**\n//  * Module augmentation for `next-auth` types. Allows us to add custom properties to the `session`\n//  * object and keep type safety.\n//  *\n//  * @see https://next-auth.js.org/getting-started/typescript#module-augmentation\n//  */\n// // declare module \"next-auth\" {\n// //   interface Session extends DefaultSession {\n// //     user: {\n// //       id: string;\n// //       // ...other properties\n// //       // role: UserRole;\n// //     } & DefaultSession[\"user\"];\n// //   }\n// declare module \"next-auth\" {\n//   interface Session extends DefaultSession {\n//     user: {\n//       id: string;\n//       // ...other properties\n//       role: $Enums.Role;\n//     } & DefaultSession[\"user\"];\n//   }\n\n//   // interface User {\n//   //   // ...other properties\n//   //   // role: UserRole;\n//   // }\n// }\n\n// /**\n//  * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n//  *\n//  * @see https://next-auth.js.org/configuration/options\n//  */\n// export const authConfig = {\n//   providers: [\n//     EmailProvider({\n//       server: process.env.EMAIL_SERVER,\n//       from: process.env.EMAIL_FROM,\n//       sendVerificationRequest: sendVerificationRequest,\n//     })\n//   ],\n//   adapter: PrismaAdapter(db),\n//   callbacks: {\n//     session: ({ session, user }) => ({\n//       ...session,\n//       user: {\n//         ...session.user,\n//         id: user.id,\n//       },\n//     }),\n//   },\n// } satisfies NextAuthConfig;\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { $Enums } from \"@prisma/client\";\nimport { type DefaultSession, type NextAuthConfig } from \"next-auth\";\nimport EmailProvider from \"next-auth/providers/nodemailer\";\nimport { sendVerificationRequest } from \"~/mailers/auth-mailer\";\n\nimport { db } from \"~/server/db\";\n\n/**\n * Module augmentation for `next-auth` types. Allows us to add custom properties to the `session`\n * object and keep type safety.\n *\n * @see https://next-auth.js.org/getting-started/typescript#module-augmentation\n */\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n      // ...other properties\n      role: $Enums.Role;\n    } & DefaultSession[\"user\"];\n  }\n\n  // interface User {\n  //   // ...other properties\n  //   // role: UserRole;\n  // }\n}\n\n/**\n * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n *\n * @see https://next-auth.js.org/configuration/options\n */\nexport const authConfig = {\n  providers: [\n    EmailProvider({\n      server: process.env.EMAIL_SERVER,\n      from: process.env.EMAIL_FROM,\n      sendVerificationRequest: sendVerificationRequest,\n    })\n  ],\n  adapter: PrismaAdapter(db),\n  callbacks: {\n    session: ({ session, user }) => ({\n      ...session,\n      user: {\n        ...session.user,\n        id: user.id,\n      },\n    }),\n  },\n} satisfies NextAuthConfig;"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,wEAAwE;AACxE,8DAA8D;AAC9D,6DAA6D;AAE7D,oCAAoC;AACpC,mEAAmE;AACnE,2CAA2C;AAE3C,MAAM;AACN,oGAAoG;AACpG,kCAAkC;AAClC,KAAK;AACL,kFAAkF;AAClF,MAAM;AACN,kCAAkC;AAClC,kDAAkD;AAClD,iBAAiB;AACjB,uBAAuB;AACvB,kCAAkC;AAClC,8BAA8B;AAC9B,qCAAqC;AACrC,SAAS;AACT,+BAA+B;AAC/B,+CAA+C;AAC/C,cAAc;AACd,oBAAoB;AACpB,+BAA+B;AAC/B,2BAA2B;AAC3B,kCAAkC;AAClC,MAAM;AAEN,wBAAwB;AACxB,gCAAgC;AAChC,4BAA4B;AAC5B,SAAS;AACT,IAAI;AAEJ,MAAM;AACN,oFAAoF;AACpF,KAAK;AACL,yDAAyD;AACzD,MAAM;AACN,8BAA8B;AAC9B,iBAAiB;AACjB,sBAAsB;AACtB,0CAA0C;AAC1C,sCAAsC;AACtC,0DAA0D;AAC1D,SAAS;AACT,OAAO;AACP,gCAAgC;AAChC,iBAAiB;AACjB,yCAAyC;AACzC,oBAAoB;AACpB,gBAAgB;AAChB,2BAA2B;AAC3B,uBAAuB;AACvB,WAAW;AACX,UAAU;AACV,OAAO;AACP,8BAA8B;;;;AAC9B;AAGA;AACA;AAEA;AAHA;;;;;AA+BO,MAAM,aAAa;IACxB,WAAW;QACT,CAAA,GAAA,gPAAA,CAAA,UAAa,AAAD,EAAE;YACZ,QAAQ,QAAQ,GAAG,CAAC,YAAY;YAChC,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,yBAAyB,gIAAA,CAAA,0BAAuB;QAClD;KACD;IACD,SAAS,CAAA,GAAA,iQAAA,CAAA,gBAAa,AAAD,EAAE,mHAAA,CAAA,KAAE;IACzB,WAAW;QACT,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAK,CAAC;gBAC/B,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,IAAI,KAAK,EAAE;gBACb;YACF,CAAC;IACH;AACF"}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/server/auth/index.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { cache } from \"react\";\n\nimport { authConfig } from \"./config\";\n\nconst { auth: uncachedAuth, handlers, signIn, signOut } = NextAuth(authConfig);\n\nconst auth = cache(uncachedAuth);\n\nexport { auth, handlers, signIn, signOut };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;AAHA;;;;AAKA,MAAM,EAAE,MAAM,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iQAAA,CAAA,UAAQ,AAAD,EAAE,+HAAA,CAAA,aAAU;AAE7E,MAAM,OAAO,CAAA,GAAA,oUAAA,CAAA,QAAK,AAAD,EAAE"}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/rerwies/reviews.tsx"],"sourcesContent":["\r\n// \"use client\";\r\n\r\n// import { api } from \"~/trpc/react\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const { data: reviews = [], isLoading } = api.review.getByProduct.useQuery({ productId });\r\n\r\n//   if (isLoading) return <p>Загрузка отзывов...</p>;\r\n//   if (reviews.length === 0) return <p className=\"text-center text-gray-500\">Отзывов пока нет.</p>;\r\n\r\n//   return (\r\n//     <div className=\"space-y-6\">\r\n//       {reviews.map((review) => (\r\n//         <div key={review.id} className=\"border p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\r\n//           <div className=\"flex items-center space-x-4\">\r\n//             <div className=\"w-12 h-12 rounded-full overflow-hidden\">\r\n//               {review.user.image ? (\r\n//                 <img src={review.user.image} alt={review.user.name || undefined} className=\"w-full h-full object-cover\" />\r\n//               ) : (\r\n//                 <div className=\"w-full h-full bg-gray-300 flex items-center justify-center text-gray-700\">\r\n//                   {review.user.name}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//             <div>\r\n//               <h3 className=\"text-xl font-semibold\">{review.user.name || \"Нет имени\"}</h3>\r\n//               <div className=\"text-yellow-500 flex items-center\">\r\n//                 {Array.from({ length: 5 }, (_, index) => (\r\n//                   <span key={index} className={index < review.rating ? \"text-yellow-500\" : \"text-gray-300\"}>\r\n//                     ★\r\n//                   </span>\r\n//                 ))}\r\n//               </div>\r\n//               <span className=\"text-sm text-gray-400\">\r\n//                 {new Date(review.createdAt).toLocaleDateString()}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//           {review.comment && <p className=\"mt-2 text-gray-700\">{review.comment}</p>}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n// \"use client\";\r\n\r\n// import { api } from \"~/trpc/react\";\r\n// import { useQueryClient } from \"@tanstack/react-query\";\r\n// import { useEffect } from \"react\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const queryClient = useQueryClient();\r\n\r\n//   const { data: reviews = [], isLoading } = api.review.getByProduct.useQuery(\r\n//     { productId },\r\n//     {\r\n//       // Опционально: автообновление каждые 10 секунд\r\n//       // refetchInterval: 10000,\r\n//     }\r\n//   );\r\n\r\n//   // Автоматическое обновление кеша, если нужно \"принудительно\"\r\n//   // Например, можно использовать в useEffect, когда появляется событие\r\n//   // от формы добавления (например, через context, eventBus и т.п.)\r\n\r\n//   if (isLoading) return <p>Загрузка отзывов...</p>;\r\n//   if (reviews.length === 0) return <p className=\"text-center text-gray-500\">Отзывов пока нет.</p>;\r\n\r\n//   return (\r\n//     <div className=\"space-y-6\">\r\n//       {reviews.map((review) => (\r\n//         <div\r\n//           key={review.id}\r\n//           className=\"border p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow\"\r\n//         >\r\n//           <div className=\"flex items-center space-x-4\">\r\n//             <div className=\"w-12 h-12 rounded-full overflow-hidden\">\r\n//               {review.user.image ? (\r\n//                 <img\r\n//                   src={review.user.image}\r\n//                   alt={review.user.name || undefined}\r\n//                   className=\"w-full h-full object-cover\"\r\n//                 />\r\n//               ) : (\r\n//                 <div className=\"w-full h-full bg-gray-300 flex items-center justify-center text-gray-700\">\r\n//                   {review.user.name}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//             <div>\r\n//               <h3 className=\"text-xl font-semibold\">\r\n//                 {review.user.name || \"Нет имени\"}\r\n//               </h3>\r\n//               <div className=\"text-yellow-500 flex items-center\">\r\n//                 {Array.from({ length: 5 }, (_, index) => (\r\n//                   <span\r\n//                     key={index}\r\n//                     className={index < review.rating ? \"text-yellow-500\" : \"text-gray-300\"}\r\n//                   >\r\n//                     ★\r\n//                   </span>\r\n//                 ))}\r\n//               </div>\r\n//               <span className=\"text-sm text-gray-400\">\r\n//                 {new Date(review.createdAt).toLocaleDateString()}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//           {review.comment && <p className=\"mt-2 text-gray-700\">{review.comment}</p>}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n// ~/app/components/Reviews.tsx\r\n// ~/app/components/Reviews.tsx\r\n// ~/app/components/Reviews.tsx\r\n// ~/app/components/Reviews.tsx\r\n// ~/app/components/Reviews.tsx\r\n\"use client\";\r\n\r\n// import { api } from \"~/trpc/react\";\r\n\r\n// type ReviewWithUser = {\r\n//   id: string;\r\n//   productId: string;\r\n//   userId: string;\r\n//   rating: number;\r\n//   comment: string | null;\r\n//   createdAt: Date;\r\n//   user: {\r\n//     id: string;\r\n//     name: string | null;\r\n//     image: string | null;\r\n//   };\r\n// };\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   // Use polling to refresh reviews every 5 seconds\r\n//   const { data: reviews = [], isLoading } = api.review.getByProduct.useQuery(\r\n//     { productId },\r\n    // {\r\n    //   refetchInterval: 5000, // Refresh every 5 seconds\r\n    // }\r\n//   );\r\n\r\n//   if (isLoading) return <p>Загрузка отзывов...</p>;\r\n//   if (reviews.length === 0) return <p className=\"text-center text-gray-500\">Отзывов пока нет.</p>;\r\n\r\n//   return (\r\n//     <div className=\"space-y-6\">\r\n//       {reviews.map((review) => (\r\n//         <div key={review.id} className=\"border p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\r\n//           <div className=\"flex items-center space-x-4\">\r\n//             <div className=\"w-12 h-12 rounded-full overflow-hidden\">\r\n//               {review.user.image ? (\r\n//                 <img \r\n//                   src={review.user.image} \r\n//                   alt={review.user.name || \"User\"} \r\n//                   className=\"w-full h-full object-cover\" \r\n//                 />\r\n//               ) : (\r\n//                 <div className=\"w-full h-full bg-gray-300 flex items-center justify-center text-gray-700\">\r\n//                   {review.user.name?.charAt(0) || \"U\"}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//             <div>\r\n//               <h3 className=\"text-xl font-semibold\">{review.user.name || \"Аноним\"}</h3>\r\n//               <div className=\"text-yellow-500 flex items-center\">\r\n//                 {Array.from({ length: 5 }, (_, index) => (\r\n//                   <span key={index} className={index < review.rating ? \"text-yellow-500\" : \"text-gray-300\"}>\r\n//                     ★\r\n//                   </span>\r\n//                 ))}\r\n//               </div>\r\n//               <span className=\"text-sm text-gray-400\">\r\n//                 {new Date(review.createdAt).toLocaleDateString()}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//           {review.comment && <p className=\"mt-2 text-gray-700\">{review.comment}</p>}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n// \"use client\";\r\n\r\n// import { api } from \"~/trpc/react\";\r\n// import Image from \"next/image\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const { data: reviews, isLoading } = api.review.getByProduct.useQuery({ \r\n//     productId \r\n//   });\r\n\r\n//   if (isLoading) return <div className=\"text-center py-4\">Загрузка отзывов...</div>;\r\n//   if (!reviews || reviews.length === 0) return <div className=\"text-center py-4\">Отзывов пока нет</div>;\r\n\r\n//   return (\r\n//     <div className=\"mt-8 space-y-6\">\r\n//       <h2 className=\"text-2xl font-bold\">Отзывы</h2>\r\n//       {reviews.map((review) => (\r\n//         <div key={review.id} className=\"p-4 border rounded-lg\">\r\n//           <div className=\"flex items-center gap-4 mb-2\">\r\n//             {/* {review.user.image && (\r\n//               // <div className=\"avatar\">\r\n//                 {/* <div className=\"w-12 rounded-full\">\r\n//                   <Image \r\n//                     src={review.user.image} \r\n//                     alt=\"User avatar\" \r\n//                     width={48} \r\n//                     height={48}\r\n//                   />\r\n//                 </div> */}\r\n//               {/* </div> */}\r\n            \r\n//             <div>\r\n//               <div className=\"font-semibold\">\r\n//                 {review.user.name || 'Аноним'} {review.user.surname || ''}\r\n//               </div>\r\n//               <div className=\"text-yellow-500\">\r\n//                 {[...Array(5)].map((_, i) => (\r\n//                   <span key={i}>{i < review.rating ? '★' : '☆'}</span>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <p className=\"text-gray-700\">{review.comment}</p>\r\n//           <div className=\"text-sm text-gray-500 mt-2\">\r\n//             {new Date(review.createdAt).toLocaleDateString()}\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { api } from \"~/trpc/react\";\r\n// import { PencilSquareIcon, TrashIcon, FolderPlusIcon } from \"@heroicons/react/24/outline\";\r\n// import { useSession } from \"next-auth/react\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const { data: session } = useSession();\r\n//   const currentUser = session?.user;\r\n\r\n//   const { data: reviews, isLoading, refetch } = api.review.getByProduct.useQuery({ productId });\r\n//   const deleteMutation = api.review.delete.useMutation({ onSuccess: () => refetch() });\r\n//   const createReplyMutation = api.review.create.useMutation({ onSuccess: () => refetch() });\r\n//   const updateMutation = api.review.update.useMutation({\r\n//     onSuccess: () => {\r\n//       refetch();\r\n//     },\r\n//   });\r\n\r\n//   const [replyingTo, setReplyingTo] = useState<string | null>(null);\r\n//   const [replyText, setReplyText] = useState<string>(\"\");\r\n//   const [editingReviewId, setEditingReviewId] = useState<string | null>(null);\r\n//   const [editText, setEditText] = useState<string>(\"\");\r\n\r\n//   if (isLoading) return <div className=\"text-center py-4\">Загрузка отзывов...</div>;\r\n//   if (!reviews || reviews.length === 0) return <div className=\"text-center py-4\">Отзывов пока нет</div>;\r\n\r\n//   return (\r\n//     <div className=\"mt-8 space-y-6\">\r\n//       <h2 className=\"text-2xl font-bold\">Отзывы</h2>\r\n//       {reviews.map((review) => (\r\n//         <div key={review.id} className=\"relative p-4 border rounded-lg\">\r\n//           {/* Кнопки редактирования и удаления */}\r\n//           {currentUser?.id === review.userId && (\r\n//             <div className=\"absolute top-2 right-2 flex gap-2\">\r\n//               <button\r\n//                 onClick={() => {\r\n//                   setEditingReviewId(review.id);\r\n//                   setEditText(review.comment || \"\");\r\n//                 }}\r\n//                 className=\"text-blue-600 hover:text-blue-800\"\r\n//                 title=\"Редактировать\"\r\n//               >\r\n//                 <PencilSquareIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => deleteMutation.mutate({ reviewId: review.id })}\r\n//                 className=\"text-red-500 hover:text-red-700\"\r\n//                 title=\"Удалить\"\r\n//               >\r\n//                 <TrashIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Автор и рейтинг */}\r\n//           <div className=\"flex items-center gap-4 mb-2\">\r\n//             <div>\r\n//               <div className=\"font-semibold\">\r\n//                 {review.user.name || \"Аноним\"} {review.user.surname || \"\"}\r\n//               </div>\r\n//               <div className=\"text-yellow-500\">\r\n//                 {[...Array(5)].map((_, i) => (\r\n//                   <span key={i}>{i < review.rating ? \"★\" : \"☆\"}</span>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Редактируемый или обычный текст */}\r\n//           {editingReviewId === review.id ? (\r\n//             <div className=\"space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={editText}\r\n//                 onChange={(e) => setEditText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     updateMutation.mutate({\r\n//                       reviewId: review.id, // ключ должен быть reviewId, не id\r\n//                       comment: editText,\r\n//                       rating: review.rating,\r\n//                     });\r\n//                     setEditingReviewId(null); // оптимистично скрываем форму редактирования\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Сохранить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setEditingReviewId(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-gray-700\">{review.comment}</p>\r\n//           )}\r\n\r\n//           <div className=\"text-sm text-gray-500 mt-2\">\r\n//             {new Date(review.createdAt).toLocaleDateString()}\r\n//           </div>\r\n\r\n//           {/* Ответить */}\r\n//           {currentUser?.id !== review.userId && (\r\n//             <div className=\"mt-2\">\r\n//               <button\r\n//                 onClick={() => setReplyingTo(replyingTo === review.id ? null : review.id)}\r\n//                 className=\"flex items-center text-blue-600 hover:underline gap-1\"\r\n//               >\r\n//                 <FolderPlusIcon className=\"w-4 h-4\" />\r\n//                 Ответить\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Форма ответа */}\r\n//           {replyingTo === review.id && (\r\n//             <div className=\"mt-2 space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={replyText}\r\n//                 onChange={(e) => setReplyText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     createReplyMutation.mutate({\r\n//                       productId,\r\n//                       comment: replyText,\r\n//                       rating: 0,\r\n//                       parentId: review.id,\r\n//                       userId: currentUser?.id || \"\",\r\n//                     });\r\n//                     setReplyText(\"\");\r\n//                     setReplyingTo(null);\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Ответить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setReplyingTo(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Вложенные ответы */}\r\n//           {review.replies?.length > 0 && (\r\n//             <div className=\"mt-4 ml-6 border-l-2 border-gray-200 space-y-4 pl-4\">\r\n//               {review.replies.map((reply) => (\r\n//                 <div key={reply.id} className=\"text-sm text-left\">\r\n//                   <div className=\"font-semibold\">\r\n//                     {reply.user.name || \"Аноним\"} {reply.user.surname || \"\"}\r\n//                   </div>\r\n//                   <p className=\"text-gray-700\">{reply.comment}</p>\r\n//                   <div className=\"text-xs text-gray-500 mt-1\">\r\n//                     {new Date(reply.createdAt).toLocaleDateString()}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { api } from \"~/trpc/react\";\r\n// import {\r\n//   PencilSquareIcon,\r\n//   TrashIcon,\r\n//   FolderPlusIcon,\r\n// } from \"@heroicons/react/24/outline\";\r\n// import { useSession } from \"next-auth/react\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const { data: session } = useSession();\r\n//   const currentUser = session?.user;\r\n\r\n//   const { data: reviews, isLoading, refetch } = api.review.getByProduct.useQuery({ productId });\r\n//   const deleteMutation = api.review.delete.useMutation({ onSuccess: () => refetch() });\r\n//   const createReplyMutation = api.review.create.useMutation({ onSuccess: () => refetch() });\r\n//   const updateMutation = api.review.update.useMutation({ onSuccess: () => refetch() });\r\n\r\n//   const [replyingTo, setReplyingTo] = useState<string | null>(null);\r\n//   const [replyText, setReplyText] = useState<string>(\"\");\r\n//   const [editingReviewId, setEditingReviewId] = useState<string | null>(null);\r\n//   const [editText, setEditText] = useState<string>(\"\");\r\n\r\n//   if (isLoading) return <div className=\"text-center py-4\">Загрузка отзывов...</div>;\r\n//   if (!reviews || reviews.length === 0) return <div className=\"text-center py-4\">Отзывов пока нет</div>;\r\n\r\n//   return (\r\n//     <div className=\"mt-8 space-y-6\">\r\n//       <h2 className=\"text-2xl font-bold\">Отзывы</h2>\r\n//       {reviews.map((review) => (\r\n//         <div key={review.id} className=\"relative p-4 border rounded-lg\">\r\n//           {/* Кнопки редактирования и удаления */}\r\n//           {currentUser?.id === review.userId && (\r\n//             <div className=\"absolute top-2 right-2 flex gap-2\">\r\n//               <button\r\n//                 onClick={() => {\r\n//                   setEditingReviewId(review.id);\r\n//                   setEditText(review.comment || \"\");\r\n//                 }}\r\n//                 className=\"text-blue-600 hover:text-blue-800\"\r\n//                 title=\"Редактировать\"\r\n//               >\r\n//                 <PencilSquareIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => deleteMutation.mutate({ reviewId: review.id })}\r\n//                 className=\"text-red-500 hover:text-red-700\"\r\n//                 title=\"Удалить\"\r\n//               >\r\n//                 <TrashIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Автор и рейтинг */}\r\n//           <div className=\"flex items-center gap-4 mb-2\">\r\n//             <div>\r\n//               <div className=\"font-semibold\">\r\n//                 {review.user.name || \"Аноним\"} {review.user.surname || \"\"}\r\n//               </div>\r\n//               <div className=\"text-yellow-500\">\r\n//                 {[...Array(5)].map((_, i) => (\r\n//                   <span key={i}>{i < review.rating ? \"★\" : \"☆\"}</span>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Комментарий или форма редактирования */}\r\n//           {editingReviewId === review.id ? (\r\n//             <div className=\"space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={editText}\r\n//                 onChange={(e) => setEditText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     updateMutation.mutate({\r\n//                       reviewId: review.id,\r\n//                       comment: editText,\r\n//                       rating: review.rating,\r\n//                     });\r\n//                     setEditingReviewId(null);\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Сохранить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setEditingReviewId(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-gray-700\">{review.comment}</p>\r\n//           )}\r\n\r\n//           <div className=\"text-sm text-gray-500 mt-2\">\r\n//             {new Date(review.createdAt).toLocaleDateString()}\r\n//           </div>\r\n\r\n//           {/* Кнопка ответа */}\r\n//           {currentUser?.id !== review.userId && (\r\n//             <div className=\"mt-2\">\r\n//               <button\r\n//                 onClick={() => setReplyingTo(replyingTo === review.id ? null : review.id)}\r\n//                 className=\"flex items-center text-blue-600 hover:underline gap-1\"\r\n//               >\r\n//                 <FolderPlusIcon className=\"w-4 h-4\" />\r\n//                 Ответить\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Форма ответа */}\r\n//           {replyingTo === review.id && (\r\n//             <div className=\"mt-2 space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={replyText}\r\n//                 onChange={(e) => setReplyText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     createReplyMutation.mutate({\r\n//                       productId,\r\n//                       comment: replyText,\r\n//                       rating: 0,\r\n//                       parentId: review.id,\r\n//                       userId: currentUser?.id || \"\",\r\n//                     });\r\n//                     setReplyText(\"\");\r\n//                     setReplyingTo(null);\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Ответить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setReplyingTo(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Ответы */}\r\n//           {review.replies?.length > 0 && (\r\n//             <div className=\"mt-4 ml-6 border-l-2 border-gray-200 space-y-4 pl-4\">\r\n//               {review.replies.map((reply) => (\r\n//                 <div key={reply.id} className=\"text-sm text-left\">\r\n//                   <div className=\"font-semibold\">\r\n//                     {reply.user.name || \"Аноним\"} {reply.user.surname || \"\"}\r\n//                   </div>\r\n//                   <p className=\"text-gray-700\">{reply.comment}</p>\r\n//                   <div className=\"text-xs text-gray-500 mt-1\">\r\n//                     {new Date(reply.createdAt).toLocaleDateString()}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { api } from \"~/trpc/react\";\r\nimport {\r\n  PencilSquareIcon,\r\n  TrashIcon,\r\n  FolderPlusIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { db } from \"~/server/db\";\r\nimport { auth } from \"~/server/auth\";\r\n\r\nexport default async function Reviews({ productId }: { productId: string }) {\r\n  const session = await auth();\r\n\r\n  const currentUser = session?.user;\r\n  \r\n  const user = await db.user.findUnique({\r\n    where: { id: currentUser?.id },\r\n    select: {\r\n      name: true,\r\n      surname: true,\r\n      image: true,\r\n    },\r\n  });\r\n  const { data: reviews, isLoading, refetch } = api.review.getByProduct.useQuery({ productId });\r\n  const deleteMutation = api.review.delete.useMutation({ onSuccess: () => refetch() });\r\n  const createReplyMutation = api.review.create.useMutation({ onSuccess: () => refetch() });\r\n  const updateMutation = api.review.update.useMutation({ onSuccess: () => refetch() });\r\n\r\n  const [replyingTo, setReplyingTo] = useState<string | null>(null);\r\n  const [replyText, setReplyText] = useState<string>(\"\");\r\n  const [editingReviewId, setEditingReviewId] = useState<string | null>(null);\r\n  const [editText, setEditText] = useState<string>(\"\");\r\n\r\n  if (isLoading) return <div className=\"text-center py-4\">Загрузка отзывов...</div>;\r\n  if (!reviews || reviews.length === 0) return <div className=\"text-center py-4\">Отзывов пока нет</div>;\r\n\r\n  return (\r\n    <div className=\"mt-8 space-y-6\">\r\n      <h2 className=\"text-2xl font-bold\">Отзывы</h2>\r\n      {reviews.map((review) => (\r\n        <div key={review.id} className=\"relative p-4 border rounded-lg\">\r\n          {/* Кнопки редактирования и удаления */}\r\n          {currentUser?.id === review.userId && (\r\n            <div className=\"absolute top-2 right-2 flex gap-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setEditingReviewId(review.id);\r\n                  setEditText(review.comment ?? \"\");\r\n                }}\r\n                className=\"text-blue-600 hover:text-blue-800\"\r\n                title=\"Редактировать\"\r\n              >\r\n                <PencilSquareIcon className=\"w-5 h-5\" />\r\n              </button>\r\n              <button\r\n                onClick={() => deleteMutation.mutate({ reviewId: review.id })}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n                title=\"Удалить\"\r\n              >\r\n                <TrashIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Автор и рейтинг */}\r\n          <div className=\"flex items-center gap-4 mb-2\">\r\n            <div>\r\n              <div className=\"font-semibold\">\r\n                {review.user.name || \"Аноним\"} {review.user.surname || \"\"}\r\n              </div>\r\n              \r\n              <div className=\"text-yellow-500\">\r\n                {[...Array(5)].map((_, i) => (\r\n                  <span key={i}>{i < review.rating ? \"★\" : \"☆\"}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Комментарий или форма редактирования */}\r\n          {editingReviewId === review.id ? (\r\n            <div className=\"space-y-2\">\r\n              <textarea\r\n                className=\"w-full border p-2 rounded\"\r\n                value={editText}\r\n                onChange={(e) => setEditText(e.target.value)}\r\n              />\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => {\r\n                    updateMutation.mutate({\r\n                      reviewId: review.id,\r\n                      comment: editText,\r\n                      rating: review.rating,\r\n                    });\r\n                    setEditingReviewId(null);\r\n                  }}\r\n                  className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                >\r\n                  Сохранить\r\n                </button>\r\n                <button\r\n                  onClick={() => setEditingReviewId(null)}\r\n                  className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-700\">{review.comment ?? \"\"}</p>\r\n          )}\r\n\r\n          <div className=\"text-sm text-gray-500 mt-2\">\r\n            {new Date(review.createdAt).toLocaleDateString()}\r\n          </div>\r\n\r\n          {/* Кнопка ответа */}\r\n          {/* {currentUser?.id !== review.userId && ( */}\r\n            <div className=\"mt-2\">\r\n              <button\r\n                onClick={() => setReplyingTo(replyingTo === review.id ? null : review.id)}\r\n                className=\"flex items-center text-blue-600 hover:underline gap-1\"\r\n              >\r\n                <FolderPlusIcon className=\"w-4 h-4\" />\r\n                Ответить\r\n              </button>\r\n            </div>\r\n          {/* )} */}\r\n\r\n          {/* Форма ответа */}\r\n          {replyingTo === review.id && (\r\n            <div className=\"mt-2 space-y-2\">\r\n              <textarea\r\n                className=\"w-full border p-2 rounded\"\r\n                value={replyText}\r\n                onChange={(e) => setReplyText(e.target.value)}\r\n              />\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => {\r\n                    createReplyMutation.mutate({\r\n                      productId,\r\n                      comment: replyText,\r\n                      rating: 0,\r\n                      parentId: review.id,\r\n                      userId: currentUser?.id || \"\",\r\n                    });\r\n                    setReplyText(\"\");\r\n                    setReplyingTo(null);\r\n                  }}\r\n                  className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                >\r\n                  Ответить\r\n                </button>\r\n                <button\r\n                  onClick={() => setReplyingTo(null)}\r\n                  className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n              </div>\r\n            </div> \r\n            \r\n          )}\r\n\r\n          {/* Ответы */}\r\n          {Array.isArray(review.replies) && review.replies.length > 0 && (\r\n            <div className=\"mt-4 ml-6 border-l-2 border-gray-200 space-y-4 pl-4\">\r\n              {review.replies.map((reply) => (\r\n                <div key={reply.id} className=\"text-sm text-left\">\r\n                  <div className=\"font-semibold\">\r\n                    {reply.user.name || \"Аноним\"} {reply.user.surname || \"\"}\r\n                  </div>\r\n                  <p className=\"text-gray-700\">{reply.comment ?? \"\"}</p>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">\r\n                    {new Date(reply.createdAt).toLocaleDateString()}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n                        {currentUser?.id === review.userId &&  (\r\n            <div className=\"\">\r\n              <button\r\n                onClick={() => {\r\n                  setEditingReviewId(review.parentId);\r\n                  setEditText(review.comment ?? \"\");\r\n                }}\r\n                className=\"text-blue-600 hover:text-blue-800\"\r\n                title=\"Редактировать\"\r\n              >\r\n                <PencilSquareIcon className=\"w-5 h-5\" />\r\n              </button>\r\n              <button\r\n                onClick={() => deleteMutation.mutate({ reviewId: review.id })}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n                title=\"Удалить\"\r\n              >\r\n                <TrashIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { api } from \"~/trpc/react\";\r\n// import {\r\n//   PencilSquareIcon,\r\n//   TrashIcon,\r\n//   FolderPlusIcon,\r\n// } from \"@heroicons/react/24/outline\";\r\n// import { useSession } from \"next-auth/react\";\r\n\r\n// export default function Reviews({ productId }: { productId: string }) {\r\n//   const { data: session } = useSession();\r\n//   const currentUser = session?.user;\r\n\r\n//   const { data: reviews, isLoading, refetch } = api.review.getByProduct.useQuery({ productId },\r\n//     {\r\n//       refetchOnWindowFocus: true,\r\n//     }\r\n//     );\r\n//   const deleteMutation = api.review.delete.useMutation({ onSuccess: () => refetch() });\r\n//   const createReplyMutation = api.review.create.useMutation({ onSuccess: () => refetch() });\r\n//   const updateMutation = api.review.update.useMutation({ onSuccess: () => refetch() });\r\n\r\n//   const [replyingTo, setReplyingTo] = useState<string | null>(null);\r\n//   const [replyText, setReplyText] = useState<string>(\"\");\r\n//   const [editingReviewId, setEditingReviewId] = useState<string | null>(null);\r\n//   const [editText, setEditText] = useState<string>(\"\");\r\n//   const [expandedReplies, setExpandedReplies] = useState<Record<string, boolean>>({});\r\n//   const [editingReplyId, setEditingReplyId] = useState<string | null>(null);\r\n// const [editReplyText, setEditReplyText] = useState<string>(\"\");\r\n// const [visibleReplies, setVisibleReplies] = useState<Record<string, boolean>>({});\r\n\r\n\r\n// const sortedReviews = [...(reviews ?? [])].sort(\r\n//   (a, b) => b.createdAt.getTime() - a.createdAt.getTime() \r\n// );\r\n// const sortedReviews2 = [...(reviews ?? [])].sort(\r\n//   (a, b) =>   a.createdAt.getTime() - b.createdAt.getTime()\r\n// );\r\n//   if (isLoading) return <div className=\"text-center py-4\">Загрузка отзывов...</div>;\r\n//   if (!reviews || reviews.length === 0) return <div className=\"text-center py-4\">Отзывов пока нет</div>;\r\n\r\n  \r\n//   return ( \r\n//     <div className=\"mt-8 space-y-6\">\r\n//       <h2 className=\"text-2xl font-bold\">Отзывы</h2>\r\n  \r\n//       {sortedReviews.map((review) => (\r\n//         <div key={review.id} className=\"relative p-4 border rounded-lg\">\r\n//           {/* Кнопки редактирования и удаления */}\r\n//           {currentUser?.id === review.userId && (\r\n//             <div className=\"absolute top-2 right-2 flex gap-2\">\r\n//               <button\r\n//                 onClick={() => {\r\n//                   setEditingReviewId(review.id);\r\n//                   setEditText(review.comment ?? \"\");\r\n//                 }}\r\n//                 className=\"text-blue-600 hover:text-blue-800\"\r\n//                 title=\"Редактировать\"\r\n//               >\r\n//                 <PencilSquareIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => deleteMutation.mutate({ reviewId: review.id })}\r\n//                 className=\"text-red-500 hover:text-red-700\"\r\n//                 title=\"Удалить\"\r\n//               >\r\n//                 <TrashIcon className=\"w-5 h-5\" />\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n  \r\n//           {/* Автор и рейтинг */}\r\n//           <div className=\"flex items-center gap-4 mb-2\">\r\n//             <div>\r\n//               <div className=\"font-semibold\">\r\n//                 {review.user.name || \"Аноним\"} {review.user.surname || \"\"}\r\n//               </div>\r\n//               <div className=\"text-yellow-500\">\r\n//                 {[...Array(5)].map((_, i) => (\r\n//                   <span key={i}>{i < review.rating ? \"★\" : \"☆\"}</span>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n  \r\n//           {/* Комментарий или форма редактирования */}\r\n//           {editingReviewId === review.id ? (\r\n//             <div className=\"space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={editText}\r\n//                 onChange={(e) => setEditText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     updateMutation.mutate({\r\n//                       reviewId: review.id,\r\n//                       comment: editText,\r\n//                       rating: review.rating,\r\n//                     });\r\n//                     setEditingReviewId(null);\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Сохранить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setEditingReviewId(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-gray-700\">{review.comment ?? \"\"}</p>\r\n//           )}\r\n  \r\n//           <div className=\"text-sm text-gray-500 mt-2\">\r\n//             {review.createdAt.toLocaleString()}\r\n//           </div>\r\n  \r\n//           {/* Кнопка ответа */}\r\n//           <div className=\"mt-2\">\r\n//             <button\r\n//               onClick={() => setReplyingTo(replyingTo === review.id ? null : review.id)}\r\n//               className=\"flex items-center text-blue-600 hover:underline gap-1\"\r\n//             >\r\n//               <FolderPlusIcon className=\"w-4 h-4\" />\r\n//               Ответить\r\n//             </button>\r\n//           </div>\r\n  \r\n//           {/* Форма ответа */}\r\n//           {replyingTo === review.id && (\r\n//             <div className=\"mt-2 space-y-2\">\r\n//               <textarea\r\n//                 className=\"w-full border p-2 rounded\"\r\n//                 value={replyText}\r\n//                 onChange={(e) => setReplyText(e.target.value)}\r\n//               />\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     createReplyMutation.mutate({\r\n//                       productId,\r\n//                       comment: replyText,\r\n//                       rating: 0,\r\n//                       parentId: review.id,\r\n//                     });\r\n//                     setReplyText(\"\");\r\n//                     setReplyingTo(null);\r\n//                   }}\r\n//                   className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                 >\r\n//                   Ответить\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setReplyingTo(null)}\r\n//                   className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                 >\r\n//                   Отмена\r\n//                 </button>\r\n//               </div>\r\n//             </div> \r\n//           )}\r\n  \r\n//           {/* Ответы */}\r\n//           {Array.isArray(review.replies) && review.replies.length > 0 && (\r\n//             <div className=\"mt-4 ml-6 space-y-2\">\r\n//               <button\r\n//                 onClick={() =>\r\n//                   setVisibleReplies((prev) => ({\r\n//                     ...prev,\r\n//                     [review.id]: !prev[review.id],\r\n//                   }))\r\n//                 }\r\n//                 className=\"text-sm text-blue-600 hover:underline\"\r\n//               >\r\n//                 {visibleReplies[review.id]\r\n//                   ? \"Скрыть ответы\"\r\n//                   : `Показать ответы (${review.replies.length})`}\r\n//               </button>\r\n  \r\n//               {visibleReplies[review.id] && (\r\n//                 <div className=\"border-l-2 border-gray-200 space-y-4 pl-4\">\r\n//                   {[...review.replies]\r\n//                     .sort(\r\n//                       (a, b) =>\r\n//                         new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n//                     )\r\n//                     .map((reply) => (\r\n//                       <div\r\n//                         key={reply.id}\r\n//                         className=\"text-sm text-left relative p-2 border rounded\"\r\n//                       >\r\n//                         {/* Автор ответа */}\r\n//                         <div className=\"font-semibold\">\r\n//                           {reply.user.name || \"Аноним\"} {reply.user.surname || \"\"}\r\n//                         </div>\r\n  \r\n//                         {/* Комментарий или редактирование */}\r\n//                         {editingReplyId === reply.id ? (\r\n//                           <>\r\n//                             <textarea\r\n//                               className=\"w-full border p-2 rounded mt-1\"\r\n//                               value={editReplyText}\r\n//                               onChange={(e) => setEditReplyText(e.target.value)}\r\n//                             />\r\n//                             <div className=\"flex gap-2 mt-2\">\r\n//                               <button\r\n//                                 onClick={() => {\r\n//                                   updateMutation.mutate({\r\n//                                     reviewId: reply.id,\r\n//                                     comment: editReplyText,\r\n//                                     rating: reply.rating,\r\n//                                   });\r\n//                                   setEditingReplyId(null);\r\n//                                 }}\r\n//                                 className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//                               >\r\n//                                 Сохранить\r\n//                               </button>\r\n//                               <button\r\n//                                 onClick={() => setEditingReplyId(null)}\r\n//                                 className=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\r\n//                               >\r\n//                                 Отмена\r\n//                               </button>\r\n//                             </div>\r\n//                           </>\r\n//                         ) : (\r\n//                           <>\r\n//                             <p className=\"text-gray-700\">{reply.comment ?? \"\"}</p>\r\n//                             <div className=\"text-xs text-gray-500 mt-1\">\r\n//                               {reply.createdAt.toLocaleString()}\r\n//                             </div>\r\n//                           </>\r\n//                         )}\r\n  \r\n//                         {/* Кнопки редактирования и удаления */}\r\n//                         {currentUser?.id === reply.userId &&\r\n//                           editingReplyId !== reply.id && (\r\n//                             <div className=\"absolute top-1 right-1 flex gap-2\">\r\n//                               <button\r\n//                                 onClick={() => {\r\n//                                   setEditingReplyId(reply.id);\r\n//                                   setEditReplyText(reply.comment ?? \"\");\r\n//                                 }}\r\n//                                 className=\"text-blue-600 hover:text-blue-800\"\r\n//                                 title=\"Редактировать\"\r\n//                               >\r\n//                                 <PencilSquareIcon className=\"w-4 h-4\" />\r\n//                               </button>\r\n//                               <button\r\n//                                 onClick={() =>\r\n//                                   deleteMutation.mutate({ reviewId: reply.id })\r\n//                                 }\r\n//                                 className=\"text-red-500 hover:text-red-700\"\r\n//                                 title=\"Удалить\"\r\n//                               >\r\n//                                 <TrashIcon className=\"w-4 h-4\" />\r\n//                               </button>\r\n//                             </div>\r\n//                           )}\r\n//                       </div>\r\n//                     ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n//                               }\r\n"],"names":[],"mappings":"AACA,gBAAgB;AAEhB,sCAAsC;AAEtC,0EAA0E;AAC1E,+FAA+F;AAE/F,sDAAsD;AACtD,qGAAqG;AAErG,aAAa;AACb,kCAAkC;AAClC,mCAAmC;AACnC,8GAA8G;AAC9G,0DAA0D;AAC1D,uEAAuE;AACvE,uCAAuC;AACvC,6HAA6H;AAC7H,sBAAsB;AACtB,6GAA6G;AAC7G,uCAAuC;AACvC,yBAAyB;AACzB,mBAAmB;AACnB,qBAAqB;AACrB,oBAAoB;AACpB,6FAA6F;AAC7F,oEAAoE;AACpE,6DAA6D;AAC7D,+GAA+G;AAC/G,wBAAwB;AACxB,4BAA4B;AAC5B,sBAAsB;AACtB,uBAAuB;AACvB,yDAAyD;AACzD,oEAAoE;AACpE,wBAAwB;AACxB,qBAAqB;AACrB,mBAAmB;AACnB,uFAAuF;AACvF,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AACJ,gBAAgB;AAEhB,sCAAsC;AACtC,0DAA0D;AAC1D,qCAAqC;AAErC,0EAA0E;AAC1E,0CAA0C;AAE1C,gFAAgF;AAChF,qBAAqB;AACrB,QAAQ;AACR,wDAAwD;AACxD,mCAAmC;AACnC,QAAQ;AACR,OAAO;AAEP,kEAAkE;AAClE,0EAA0E;AAC1E,sEAAsE;AAEtE,sDAAsD;AACtD,qGAAqG;AAErG,aAAa;AACb,kCAAkC;AAClC,mCAAmC;AACnC,eAAe;AACf,4BAA4B;AAC5B,0FAA0F;AAC1F,YAAY;AACZ,0DAA0D;AAC1D,uEAAuE;AACvE,uCAAuC;AACvC,uBAAuB;AACvB,4CAA4C;AAC5C,wDAAwD;AACxD,2DAA2D;AAC3D,qBAAqB;AACrB,sBAAsB;AACtB,6GAA6G;AAC7G,uCAAuC;AACvC,yBAAyB;AACzB,mBAAmB;AACnB,qBAAqB;AACrB,oBAAoB;AACpB,uDAAuD;AACvD,oDAAoD;AACpD,sBAAsB;AACtB,oEAAoE;AACpE,6DAA6D;AAC7D,0BAA0B;AAC1B,kCAAkC;AAClC,8FAA8F;AAC9F,sBAAsB;AACtB,wBAAwB;AACxB,4BAA4B;AAC5B,sBAAsB;AACtB,uBAAuB;AACvB,yDAAyD;AACzD,oEAAoE;AACpE,wBAAwB;AACxB,qBAAqB;AACrB,mBAAmB;AACnB,uFAAuF;AACvF,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AACJ,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;;;;;AAue/B;AACA;AAOA;AACA;AAPA;AAAA;AAAA;AAxeA;AAEA,sCAAsC;AAEtC,0BAA0B;AAC1B,gBAAgB;AAChB,uBAAuB;AACvB,oBAAoB;AACpB,oBAAoB;AACpB,4BAA4B;AAC5B,qBAAqB;AACrB,YAAY;AACZ,kBAAkB;AAClB,2BAA2B;AAC3B,4BAA4B;AAC5B,OAAO;AACP,KAAK;AAEL,0EAA0E;AAC1E,sDAAsD;AACtD,gFAAgF;AAChF,qBAAqB;AACjB,IAAI;AACJ,sDAAsD;AACtD,IAAI;AACR,OAAO;AAEP,sDAAsD;AACtD,qGAAqG;AAErG,aAAa;AACb,kCAAkC;AAClC,mCAAmC;AACnC,8GAA8G;AAC9G,0DAA0D;AAC1D,uEAAuE;AACvE,uCAAuC;AACvC,wBAAwB;AACxB,6CAA6C;AAC7C,sDAAsD;AACtD,4DAA4D;AAC5D,qBAAqB;AACrB,sBAAsB;AACtB,6GAA6G;AAC7G,yDAAyD;AACzD,yBAAyB;AACzB,mBAAmB;AACnB,qBAAqB;AACrB,oBAAoB;AACpB,0FAA0F;AAC1F,oEAAoE;AACpE,6DAA6D;AAC7D,+GAA+G;AAC/G,wBAAwB;AACxB,4BAA4B;AAC5B,sBAAsB;AACtB,uBAAuB;AACvB,yDAAyD;AACzD,oEAAoE;AACpE,wBAAwB;AACxB,qBAAqB;AACrB,mBAAmB;AACnB,uFAAuF;AACvF,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AACJ,gBAAgB;AAEhB,sCAAsC;AACtC,kCAAkC;AAElC,0EAA0E;AAC1E,6EAA6E;AAC7E,iBAAiB;AACjB,QAAQ;AAER,uFAAuF;AACvF,2GAA2G;AAE3G,aAAa;AACb,uCAAuC;AACvC,uDAAuD;AACvD,mCAAmC;AACnC,kEAAkE;AAClE,2DAA2D;AAC3D,0CAA0C;AAC1C,4CAA4C;AAC5C,0DAA0D;AAC1D,4BAA4B;AAC5B,+CAA+C;AAC/C,yCAAyC;AACzC,kCAAkC;AAClC,kCAAkC;AAClC,uBAAuB;AACvB,6BAA6B;AAC7B,+BAA+B;AAE/B,oBAAoB;AACpB,gDAAgD;AAChD,6EAA6E;AAC7E,uBAAuB;AACvB,kDAAkD;AAClD,iDAAiD;AACjD,yEAAyE;AACzE,sBAAsB;AACtB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,8DAA8D;AAC9D,yDAAyD;AACzD,gEAAgE;AAChE,mBAAmB;AACnB,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AAYJ,gBAAgB;AAEhB,oCAAoC;AACpC,sCAAsC;AACtC,6FAA6F;AAC7F,gDAAgD;AAEhD,0EAA0E;AAC1E,4CAA4C;AAC5C,uCAAuC;AAEvC,mGAAmG;AACnG,0FAA0F;AAC1F,+FAA+F;AAC/F,2DAA2D;AAC3D,yBAAyB;AACzB,mBAAmB;AACnB,SAAS;AACT,QAAQ;AAER,uEAAuE;AACvE,4DAA4D;AAC5D,iFAAiF;AACjF,0DAA0D;AAE1D,uFAAuF;AACvF,2GAA2G;AAE3G,aAAa;AACb,uCAAuC;AACvC,uDAAuD;AACvD,mCAAmC;AACnC,2EAA2E;AAC3E,qDAAqD;AACrD,oDAAoD;AACpD,kEAAkE;AAClE,wBAAwB;AACxB,mCAAmC;AACnC,mDAAmD;AACnD,uDAAuD;AACvD,qBAAqB;AACrB,gEAAgE;AAChE,wCAAwC;AACxC,kBAAkB;AAClB,2DAA2D;AAC3D,0BAA0B;AAC1B,wBAAwB;AACxB,iFAAiF;AACjF,8DAA8D;AAC9D,kCAAkC;AAClC,kBAAkB;AAClB,oDAAoD;AACpD,0BAA0B;AAC1B,qBAAqB;AACrB,eAAe;AAEf,oCAAoC;AACpC,2DAA2D;AAC3D,oBAAoB;AACpB,gDAAgD;AAChD,6EAA6E;AAC7E,uBAAuB;AACvB,kDAAkD;AAClD,iDAAiD;AACjD,yEAAyE;AACzE,sBAAsB;AACtB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AAEnB,oDAAoD;AACpD,+CAA+C;AAC/C,0CAA0C;AAC1C,0BAA0B;AAC1B,wDAAwD;AACxD,mCAAmC;AACnC,gEAAgE;AAChE,mBAAmB;AACnB,6CAA6C;AAC7C,0BAA0B;AAC1B,qCAAqC;AACrC,8CAA8C;AAC9C,iFAAiF;AACjF,2CAA2C;AAC3C,+CAA+C;AAC/C,0BAA0B;AAC1B,8FAA8F;AAC9F,uBAAuB;AACvB,2FAA2F;AAC3F,oBAAoB;AACpB,8BAA8B;AAC9B,4BAA4B;AAC5B,0BAA0B;AAC1B,6DAA6D;AAC7D,gFAAgF;AAChF,oBAAoB;AACpB,2BAA2B;AAC3B,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,kBAAkB;AAClB,gEAAgE;AAChE,eAAe;AAEf,yDAAyD;AACzD,gEAAgE;AAChE,mBAAmB;AAEnB,6BAA6B;AAC7B,oDAAoD;AACpD,qCAAqC;AACrC,wBAAwB;AACxB,6FAA6F;AAC7F,oFAAoF;AACpF,kBAAkB;AAClB,yDAAyD;AACzD,2BAA2B;AAC3B,0BAA0B;AAC1B,qBAAqB;AACrB,eAAe;AAEf,iCAAiC;AACjC,2CAA2C;AAC3C,+CAA+C;AAC/C,0BAA0B;AAC1B,wDAAwD;AACxD,oCAAoC;AACpC,iEAAiE;AACjE,mBAAmB;AACnB,6CAA6C;AAC7C,0BAA0B;AAC1B,qCAAqC;AACrC,mDAAmD;AACnD,mCAAmC;AACnC,4CAA4C;AAC5C,mCAAmC;AACnC,6CAA6C;AAC7C,uDAAuD;AACvD,0BAA0B;AAC1B,wCAAwC;AACxC,2CAA2C;AAC3C,uBAAuB;AACvB,2FAA2F;AAC3F,oBAAoB;AACpB,6BAA6B;AAC7B,4BAA4B;AAC5B,0BAA0B;AAC1B,wDAAwD;AACxD,gFAAgF;AAChF,oBAAoB;AACpB,2BAA2B;AAC3B,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,eAAe;AAEf,qCAAqC;AACrC,6CAA6C;AAC7C,oFAAoF;AACpF,iDAAiD;AACjD,qEAAqE;AACrE,oDAAoD;AACpD,+EAA+E;AAC/E,2BAA2B;AAC3B,qEAAqE;AACrE,iEAAiE;AACjE,uEAAuE;AACvE,2BAA2B;AAC3B,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,eAAe;AACf,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AACJ,gBAAgB;AAEhB,oCAAoC;AACpC,sCAAsC;AACtC,WAAW;AACX,sBAAsB;AACtB,eAAe;AACf,oBAAoB;AACpB,wCAAwC;AACxC,gDAAgD;AAEhD,0EAA0E;AAC1E,4CAA4C;AAC5C,uCAAuC;AAEvC,mGAAmG;AACnG,0FAA0F;AAC1F,+FAA+F;AAC/F,0FAA0F;AAE1F,uEAAuE;AACvE,4DAA4D;AAC5D,iFAAiF;AACjF,0DAA0D;AAE1D,uFAAuF;AACvF,2GAA2G;AAE3G,aAAa;AACb,uCAAuC;AACvC,uDAAuD;AACvD,mCAAmC;AACnC,2EAA2E;AAC3E,qDAAqD;AACrD,oDAAoD;AACpD,kEAAkE;AAClE,wBAAwB;AACxB,mCAAmC;AACnC,mDAAmD;AACnD,uDAAuD;AACvD,qBAAqB;AACrB,gEAAgE;AAChE,wCAAwC;AACxC,kBAAkB;AAClB,2DAA2D;AAC3D,0BAA0B;AAC1B,wBAAwB;AACxB,iFAAiF;AACjF,8DAA8D;AAC9D,kCAAkC;AAClC,kBAAkB;AAClB,oDAAoD;AACpD,0BAA0B;AAC1B,qBAAqB;AACrB,eAAe;AAEf,oCAAoC;AACpC,2DAA2D;AAC3D,oBAAoB;AACpB,gDAAgD;AAChD,6EAA6E;AAC7E,uBAAuB;AACvB,kDAAkD;AAClD,iDAAiD;AACjD,yEAAyE;AACzE,sBAAsB;AACtB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AAEnB,yDAAyD;AACzD,+CAA+C;AAC/C,0CAA0C;AAC1C,0BAA0B;AAC1B,wDAAwD;AACxD,mCAAmC;AACnC,gEAAgE;AAChE,mBAAmB;AACnB,6CAA6C;AAC7C,0BAA0B;AAC1B,qCAAqC;AACrC,8CAA8C;AAC9C,6CAA6C;AAC7C,2CAA2C;AAC3C,+CAA+C;AAC/C,0BAA0B;AAC1B,gDAAgD;AAChD,uBAAuB;AACvB,2FAA2F;AAC3F,oBAAoB;AACpB,8BAA8B;AAC9B,4BAA4B;AAC5B,0BAA0B;AAC1B,6DAA6D;AAC7D,gFAAgF;AAChF,oBAAoB;AACpB,2BAA2B;AAC3B,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,kBAAkB;AAClB,gEAAgE;AAChE,eAAe;AAEf,yDAAyD;AACzD,gEAAgE;AAChE,mBAAmB;AAEnB,kCAAkC;AAClC,oDAAoD;AACpD,qCAAqC;AACrC,wBAAwB;AACxB,6FAA6F;AAC7F,oFAAoF;AACpF,kBAAkB;AAClB,yDAAyD;AACzD,2BAA2B;AAC3B,0BAA0B;AAC1B,qBAAqB;AACrB,eAAe;AAEf,iCAAiC;AACjC,2CAA2C;AAC3C,+CAA+C;AAC/C,0BAA0B;AAC1B,wDAAwD;AACxD,oCAAoC;AACpC,iEAAiE;AACjE,mBAAmB;AACnB,6CAA6C;AAC7C,0BAA0B;AAC1B,qCAAqC;AACrC,mDAAmD;AACnD,mCAAmC;AACnC,4CAA4C;AAC5C,mCAAmC;AACnC,6CAA6C;AAC7C,uDAAuD;AACvD,0BAA0B;AAC1B,wCAAwC;AACxC,2CAA2C;AAC3C,uBAAuB;AACvB,2FAA2F;AAC3F,oBAAoB;AACpB,6BAA6B;AAC7B,4BAA4B;AAC5B,0BAA0B;AAC1B,wDAAwD;AACxD,gFAAgF;AAChF,oBAAoB;AACpB,2BAA2B;AAC3B,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,eAAe;AAEf,2BAA2B;AAC3B,6CAA6C;AAC7C,oFAAoF;AACpF,iDAAiD;AACjD,qEAAqE;AACrE,oDAAoD;AACpD,+EAA+E;AAC/E,2BAA2B;AAC3B,qEAAqE;AACrE,iEAAiE;AACjE,uEAAuE;AACvE,2BAA2B;AAC3B,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,eAAe;AACf,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;AACJ;;;;;;;AAae,eAAe,QAAQ,EAAE,SAAS,EAAyB;IACxE,MAAM,UAAU,MAAM,CAAA,GAAA,8HAAA,CAAA,OAAI,AAAD;IAEzB,MAAM,cAAc,SAAS;IAE7B,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,IAAI,aAAa;QAAG;QAC7B,QAAQ;YACN,MAAM;YACN,SAAS;YACT,OAAO;QACT;IACF;IACA,MAAM,EAAE,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;QAAE;IAAU;IAC3F,MAAM,iBAAiB,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;QAAE,WAAW,IAAM;IAAU;IAClF,MAAM,sBAAsB,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;QAAE,WAAW,IAAM;IAAU;IACvF,MAAM,iBAAiB,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;QAAE,WAAW,IAAM;IAAU;IAElF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IACtE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,IAAI,WAAW,qBAAO,6WAAC;QAAI,WAAU;kBAAmB;;;;;;IACxD,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,GAAG,qBAAO,6WAAC;QAAI,WAAU;kBAAmB;;;;;;IAE/E,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAAqB;;;;;;YAClC,QAAQ,GAAG,CAAC,CAAC,uBACZ,6WAAC;oBAAoB,WAAU;;wBAE5B,aAAa,OAAO,OAAO,MAAM,kBAChC,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCACC,SAAS;wCACP,mBAAmB,OAAO,EAAE;wCAC5B,YAAY,OAAO,OAAO,IAAI;oCAChC;oCACA,WAAU;oCACV,OAAM;8CAEN,cAAA,6WAAC,sTAAA,CAAA,mBAAgB;wCAAC,WAAU;;;;;;;;;;;8CAE9B,6WAAC;oCACC,SAAS,IAAM,eAAe,MAAM,CAAC;4CAAE,UAAU,OAAO,EAAE;wCAAC;oCAC3D,WAAU;oCACV,OAAM;8CAEN,cAAA,6WAAC,wSAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAM3B,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;;kDACC,6WAAC;wCAAI,WAAU;;4CACZ,OAAO,IAAI,CAAC,IAAI,IAAI;4CAAS;4CAAE,OAAO,IAAI,CAAC,OAAO,IAAI;;;;;;;kDAGzD,6WAAC;wCAAI,WAAU;kDACZ;+CAAI,MAAM;yCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,6WAAC;0DAAc,IAAI,OAAO,MAAM,GAAG,MAAM;+CAA9B;;;;;;;;;;;;;;;;;;;;;wBAOlB,oBAAoB,OAAO,EAAE,iBAC5B,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCACC,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8CAE7C,6WAAC;oCAAI,WAAU;;sDACb,6WAAC;4CACC,SAAS;gDACP,eAAe,MAAM,CAAC;oDACpB,UAAU,OAAO,EAAE;oDACnB,SAAS;oDACT,QAAQ,OAAO,MAAM;gDACvB;gDACA,mBAAmB;4CACrB;4CACA,WAAU;sDACX;;;;;;sDAGD,6WAAC;4CACC,SAAS,IAAM,mBAAmB;4CAClC,WAAU;sDACX;;;;;;;;;;;;;;;;;iDAML,6WAAC;4BAAE,WAAU;sCAAiB,OAAO,OAAO,IAAI;;;;;;sCAGlD,6WAAC;4BAAI,WAAU;sCACZ,IAAI,KAAK,OAAO,SAAS,EAAE,kBAAkB;;;;;;sCAK9C,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCACC,SAAS,IAAM,cAAc,eAAe,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE;gCACxE,WAAU;;kDAEV,6WAAC,kTAAA,CAAA,iBAAc;wCAAC,WAAU;;;;;;oCAAY;;;;;;;;;;;;wBAO3C,eAAe,OAAO,EAAE,kBACvB,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCACC,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;8CAE9C,6WAAC;oCAAI,WAAU;;sDACb,6WAAC;4CACC,SAAS;gDACP,oBAAoB,MAAM,CAAC;oDACzB;oDACA,SAAS;oDACT,QAAQ;oDACR,UAAU,OAAO,EAAE;oDACnB,QAAQ,aAAa,MAAM;gDAC7B;gDACA,aAAa;gDACb,cAAc;4CAChB;4CACA,WAAU;sDACX;;;;;;sDAGD,6WAAC;4CACC,SAAS,IAAM,cAAc;4CAC7B,WAAU;sDACX;;;;;;;;;;;;;;;;;;wBASN,MAAM,OAAO,CAAC,OAAO,OAAO,KAAK,OAAO,OAAO,CAAC,MAAM,GAAG,mBACxD,6WAAC;4BAAI,WAAU;;gCACZ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,sBACnB,6WAAC;wCAAmB,WAAU;;0DAC5B,6WAAC;gDAAI,WAAU;;oDACZ,MAAM,IAAI,CAAC,IAAI,IAAI;oDAAS;oDAAE,MAAM,IAAI,CAAC,OAAO,IAAI;;;;;;;0DAEvD,6WAAC;gDAAE,WAAU;0DAAiB,MAAM,OAAO,IAAI;;;;;;0DAC/C,6WAAC;gDAAI,WAAU;0DACZ,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB;;;;;;;uCANvC,MAAM,EAAE;;;;;gCAUT,aAAa,OAAO,OAAO,MAAM,kBAC9C,6WAAC;oCAAI,WAAU;;sDACb,6WAAC;4CACC,SAAS;gDACP,mBAAmB,OAAO,QAAQ;gDAClC,YAAY,OAAO,OAAO,IAAI;4CAChC;4CACA,WAAU;4CACV,OAAM;sDAEN,cAAA,6WAAC,sTAAA,CAAA,mBAAgB;gDAAC,WAAU;;;;;;;;;;;sDAE9B,6WAAC;4CACC,SAAS,IAAM,eAAe,MAAM,CAAC;oDAAE,UAAU,OAAO,EAAE;gDAAC;4CAC3D,WAAU;4CACV,OAAM;sDAEN,cAAA,6WAAC,wSAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;mBA7JnB,OAAO,EAAE;;;;;;;;;;;AAuK3B,EAoBA,gBAAgB;CAEhB,oCAAoC;CACpC,sCAAsC;CACtC,WAAW;CACX,sBAAsB;CACtB,eAAe;CACf,oBAAoB;CACpB,wCAAwC;CACxC,gDAAgD;CAEhD,0EAA0E;CAC1E,4CAA4C;CAC5C,uCAAuC;CAEvC,kGAAkG;CAClG,QAAQ;CACR,oCAAoC;CACpC,QAAQ;CACR,SAAS;CACT,0FAA0F;CAC1F,+FAA+F;CAC/F,0FAA0F;CAE1F,uEAAuE;CACvE,4DAA4D;CAC5D,iFAAiF;CACjF,0DAA0D;CAC1D,yFAAyF;CACzF,+EAA+E;CAC/E,kEAAkE;CAClE,qFAAqF;CAGrF,mDAAmD;CACnD,6DAA6D;CAC7D,KAAK;CACL,oDAAoD;CACpD,8DAA8D;CAC9D,KAAK;CACL,uFAAuF;CACvF,2GAA2G;CAG3G,cAAc;CACd,uCAAuC;CACvC,uDAAuD;CAEvD,yCAAyC;CACzC,2EAA2E;CAC3E,qDAAqD;CACrD,oDAAoD;CACpD,kEAAkE;CAClE,wBAAwB;CACxB,mCAAmC;CACnC,mDAAmD;CACnD,uDAAuD;CACvD,qBAAqB;CACrB,gEAAgE;CAChE,wCAAwC;CACxC,kBAAkB;CAClB,2DAA2D;CAC3D,0BAA0B;CAC1B,wBAAwB;CACxB,iFAAiF;CACjF,8DAA8D;CAC9D,kCAAkC;CAClC,kBAAkB;CAClB,oDAAoD;CACpD,0BAA0B;CAC1B,qBAAqB;CACrB,eAAe;CAEf,oCAAoC;CACpC,2DAA2D;CAC3D,oBAAoB;CACpB,gDAAgD;CAChD,6EAA6E;CAC7E,uBAAuB;CACvB,kDAAkD;CAClD,iDAAiD;CACjD,yEAAyE;CACzE,sBAAsB;CACtB,uBAAuB;CACvB,qBAAqB;CACrB,mBAAmB;CAEnB,yDAAyD;CACzD,+CAA+C;CAC/C,0CAA0C;CAC1C,0BAA0B;CAC1B,wDAAwD;CACxD,mCAAmC;CACnC,gEAAgE;CAChE,mBAAmB;CACnB,6CAA6C;CAC7C,0BAA0B;CAC1B,qCAAqC;CACrC,8CAA8C;CAC9C,6CAA6C;CAC7C,2CAA2C;CAC3C,+CAA+C;CAC/C,0BAA0B;CAC1B,gDAAgD;CAChD,uBAAuB;CACvB,2FAA2F;CAC3F,oBAAoB;CACpB,8BAA8B;CAC9B,4BAA4B;CAC5B,0BAA0B;CAC1B,6DAA6D;CAC7D,gFAAgF;CAChF,oBAAoB;CACpB,2BAA2B;CAC3B,4BAA4B;CAC5B,uBAAuB;CACvB,qBAAqB;CACrB,kBAAkB;CAClB,sEAAsE;CACtE,eAAe;CAEf,yDAAyD;CACzD,kDAAkD;CAClD,mBAAmB;CAEnB,kCAAkC;CAClC,mCAAmC;CACnC,sBAAsB;CACtB,2FAA2F;CAC3F,kFAAkF;CAClF,gBAAgB;CAChB,uDAAuD;CACvD,yBAAyB;CACzB,wBAAwB;CACxB,mBAAmB;CAEnB,iCAAiC;CACjC,2CAA2C;CAC3C,+CAA+C;CAC/C,0BAA0B;CAC1B,wDAAwD;CACxD,oCAAoC;CACpC,iEAAiE;CACjE,mBAAmB;CACnB,6CAA6C;CAC7C,0BAA0B;CAC1B,qCAAqC;CACrC,mDAAmD;CACnD,mCAAmC;CACnC,4CAA4C;CAC5C,mCAAmC;CACnC,6CAA6C;CAC7C,0BAA0B;CAC1B,wCAAwC;CACxC,2CAA2C;CAC3C,uBAAuB;CACvB,2FAA2F;CAC3F,oBAAoB;CACpB,6BAA6B;CAC7B,4BAA4B;CAC5B,0BAA0B;CAC1B,wDAAwD;CACxD,gFAAgF;CAChF,oBAAoB;CACpB,2BAA2B;CAC3B,4BAA4B;CAC5B,uBAAuB;CACvB,sBAAsB;CACtB,eAAe;CAEf,2BAA2B;CAC3B,6EAA6E;CAC7E,oDAAoD;CACpD,wBAAwB;CACxB,iCAAiC;CACjC,mDAAmD;CACnD,+BAA+B;CAC/B,qDAAqD;CACrD,wBAAwB;CACxB,oBAAoB;CACpB,oEAAoE;CACpE,kBAAkB;CAClB,6CAA6C;CAC7C,sCAAsC;CACtC,oEAAoE;CACpE,0BAA0B;CAE1B,gDAAgD;CAChD,8EAA8E;CAC9E,yCAAyC;CACzC,6BAA6B;CAC7B,kCAAkC;CAClC,4FAA4F;CAC5F,wBAAwB;CACxB,wCAAwC;CACxC,6BAA6B;CAC7B,yCAAyC;CACzC,oFAAoF;CACpF,0BAA0B;CAC1B,+CAA+C;CAC/C,0DAA0D;CAC1D,qFAAqF;CACrF,iCAAiC;CAEjC,iEAAiE;CACjE,2DAA2D;CAC3D,+BAA+B;CAC/B,wCAAwC;CACxC,2EAA2E;CAC3E,sDAAsD;CACtD,mFAAmF;CACnF,iCAAiC;CACjC,gEAAgE;CAChE,wCAAwC;CACxC,mDAAmD;CACnD,4DAA4D;CAC5D,0DAA0D;CAC1D,8DAA8D;CAC9D,4DAA4D;CAC5D,wCAAwC;CACxC,6DAA6D;CAC7D,qCAAqC;CACrC,yGAAyG;CACzG,kCAAkC;CAClC,4CAA4C;CAC5C,0CAA0C;CAC1C,wCAAwC;CACxC,0EAA0E;CAC1E,8FAA8F;CAC9F,kCAAkC;CAClC,yCAAyC;CACzC,0CAA0C;CAC1C,qCAAqC;CACrC,gCAAgC;CAChC,gCAAgC;CAChC,+BAA+B;CAC/B,qFAAqF;CACrF,2EAA2E;CAC3E,mEAAmE;CACnE,qCAAqC;CACrC,gCAAgC;CAChC,6BAA6B;CAE7B,mEAAmE;CACnE,+DAA+D;CAC/D,6DAA6D;CAC7D,kFAAkF;CAClF,wCAAwC;CACxC,mDAAmD;CACnD,iEAAiE;CACjE,2EAA2E;CAC3E,qCAAqC;CACrC,gFAAgF;CAChF,wDAAwD;CACxD,kCAAkC;CAClC,2EAA2E;CAC3E,0CAA0C;CAC1C,wCAAwC;CACxC,iDAAiD;CACjD,kFAAkF;CAClF,oCAAoC;CACpC,8EAA8E;CAC9E,kDAAkD;CAClD,kCAAkC;CAClC,oEAAoE;CACpE,0CAA0C;CAC1C,qCAAqC;CACrC,+BAA+B;CAC/B,+BAA+B;CAC/B,0BAA0B;CAC1B,yBAAyB;CACzB,mBAAmB;CACnB,qBAAqB;CACrB,eAAe;CACf,iBAAiB;CACjB,YAAY;CACZ,aAAa;CACb,OAAO;CACP,kCAAkC"}},
    {"offset": {"line": 2394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2400, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/confirmDialog.tsx"],"sourcesContent":["'use client';\r\n\r\nexport default function ConfirmDialog({\r\n  message,\r\n  onConfirm,\r\n  onCancel,\r\n}: {\r\n  message: string;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n}) {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-sm w-full text-center\">\r\n        <p className=\"text-lg font-medium mb-6\">{message}</p>\r\n        <div className=\"flex justify-center gap-4\">\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n          >\r\n            Да\r\n          </button>\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n          >\r\n            Нет\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEe,SAAS,cAAc,EACpC,OAAO,EACP,SAAS,EACT,QAAQ,EAKT;IACC,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAE,WAAU;8BAA4B;;;;;;8BACzC,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6WAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX"}},
    {"offset": {"line": 2459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2465, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/editProductForm.tsx"],"sourcesContent":["\r\n// 'use client';\r\n\r\n// import { useState } from \"react\";\r\n// import ConfirmDialog from \"./confirmDialog\";\r\n// import { updateProduct } from \"~/app/api/action/product\";\r\n\r\n// type Category = {\r\n//   id: string;\r\n//   name: string;\r\n// };\r\n\r\n// type Product = {\r\n//   id: string;\r\n//   name: string;\r\n//   description: string;\r\n//   price: number;\r\n//   imageUrl: string;\r\n//   categoryId: string;\r\n// };\r\n\r\n// export default function EditProductForm({\r\n//   product,\r\n//   categories,\r\n// }: {\r\n//   product: Product;\r\n//   categories: Category[];\r\n// }) {\r\n//   const [name, setName] = useState(product.name);\r\n//   const [description, setDescription] = useState(product.description);\r\n//   const [price, setPrice] = useState(product.price);\r\n//   const [imageUrl, setImageUrl] = useState(product.imageUrl);\r\n//   const [categoryId, setCategoryId] = useState(product.categoryId);\r\n//   const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n//   const handleSubmit = (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setShowConfirm(true);\r\n//   };\r\n\r\n//   const confirmSave = async () => {\r\n//     setShowConfirm(false);\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"id\", product.id);\r\n//     formData.append(\"name\", name);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"price\", price.toString());\r\n//     formData.append(\"imageUrl\", imageUrl);\r\n//     formData.append(\"categoryId\", categoryId);\r\n\r\n//     await updateProduct(formData);\r\n//   };\r\n\r\n//   return (\r\n//     <form\r\n//       onSubmit={handleSubmit}\r\n//       className=\"bg-white p-6 rounded shadow-md max-w-2xl mx-auto mb-8 space-y-4\"\r\n//     >\r\n//       <h2 className=\"text-2xl font-bold mb-4\">Редактировать товар</h2>\r\n\r\n//       <div>\r\n//         <label htmlFor=\"name\" className=\"label font-semibold\">Название товара</label>\r\n//         <input\r\n//           id=\"name\"\r\n//           className=\"w-full p-2 border rounded\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label htmlFor=\"description\" className=\"label font-semibold\">Описание</label>\r\n//         <textarea\r\n//           id=\"description\"\r\n//           className=\"w-full p-2 border rounded\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label htmlFor=\"price\" className=\"label font-semibold\">Цена</label>\r\n//         <input\r\n//           id=\"price\"\r\n//           type=\"number\"\r\n//           className=\"w-full p-2 border rounded\"\r\n//           value={price}\r\n//           onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label htmlFor=\"imageUrl\" className=\"label font-semibold\">URL изображения</label>\r\n//         <input\r\n//           id=\"imageUrl\"\r\n//           className=\"w-full p-2 border rounded\"\r\n//           value={imageUrl}\r\n//           onChange={(e) => setImageUrl(e.target.value)}\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label htmlFor=\"categoryId\" className=\"label font-semibold\">Категория</label>\r\n//         <select\r\n//           id=\"categoryId\"\r\n//           value={categoryId}\r\n//           className=\"w-full p-2 border rounded\"\r\n//           onChange={(e) => setCategoryId(e.target.value)}\r\n//         >\r\n//           <option value=\"\">Выберите категорию</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <button\r\n//         type=\"submit\"\r\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors\"\r\n//       >\r\n//         Сохранить изменения\r\n//       </button>\r\n\r\n//       {showConfirm && (\r\n//         <ConfirmDialog\r\n//           message=\"Вы уверены, что хотите сохранить изменения?\"\r\n//           onConfirm={confirmSave}\r\n//           onCancel={() => setShowConfirm(false)}\r\n//         />\r\n//       )}\r\n//     </form>\r\n//   );\r\n// }\r\n'use client';\r\n\r\nimport { useState } from \"react\";\r\nimport ConfirmDialog from \"./confirmDialog\";\r\nimport { updateProduct } from \"~/app/api/action/product\";\r\n\r\ntype Category = {\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\ntype Product = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  imageUrl: string;\r\n  categoryId: string;\r\n};\r\n\r\ntype Image = {\r\n  name: string;\r\n  url: string;\r\n};\r\n\r\nexport default function EditProductForm({\r\n  product,\r\n  categories,\r\n  availableImages,\r\n}: {\r\n  product: Product;\r\n  categories: Category[];\r\n  availableImages: { name: string, url: string }[], catalog: any[] }\r\n) {\r\n  const [name, setName] = useState(product.name);\r\n  const [description, setDescription] = useState(product.description);\r\n  const [price, setPrice] = useState(product.price);\r\n  const [imageUrl, setImageUrl] = useState(product.imageUrl);\r\n  const [categoryId, setCategoryId] = useState(product.categoryId);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  const confirmSave = async () => {\r\n    setShowConfirm(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"id\", product.id);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"price\", price.toString());\r\n    formData.append(\"imageUrl\", imageUrl);\r\n    formData.append(\"categoryId\", categoryId);\r\n\r\n    await updateProduct(formData);\r\n  };\r\n  const [selectedImages, setSelectedImages] = useState<string[]>([]);\r\n\r\n  const toggleImage = (url: string) => {\r\n    setSelectedImages((prev: string[]) =>\r\n      prev.includes(url)\r\n        ? prev.filter((u) => u !== url)\r\n        : [...prev, url]\r\n    );\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"bg-white p-6 rounded shadow-md max-w-2xl mx-auto mb-8 space-y-4\"\r\n    >\r\n      <h2 className=\"text-2xl font-bold mb-4\">Редактировать товар</h2>\r\n\r\n      <div>\r\n        <label htmlFor=\"name\" className=\"label font-semibold\">Название товара</label>\r\n        <input\r\n          id=\"name\"\r\n          className=\"w-full p-2 border rounded\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"description\" className=\"label font-semibold\">Описание</label>\r\n        <textarea\r\n          id=\"description\"\r\n          className=\"w-full p-2 border rounded\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"price\" className=\"label font-semibold\">Цена</label>\r\n        <input\r\n          id=\"price\"\r\n          type=\"number\"\r\n          className=\"w-full p-2 border rounded\"\r\n          value={price}\r\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n              <label className=\"label font-semibold\">Выберите изображения</label>\r\n              <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n                {availableImages.map((img) => {\r\n                  const isSelected = selectedImages.includes(img.url);\r\n                  return (\r\n                    <div\r\n                      key={img.url}\r\n                      className={`cursor-pointer border-2 rounded-md ${isSelected ? 'border-purple-600' : 'border-gray-300'}`}\r\n                      onClick={() => toggleImage(img.url)}\r\n                    >\r\n                      <img src={img.url} alt={img.name} className=\"w-full h-24 object-cover rounded-md\" />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n    \r\n              {/* Скрытые поля для отправки */}\r\n              {selectedImages.map((url, idx) => (\r\n                <input key={idx} type=\"hidden\" name=\"imageUrls\" value={url} />\r\n              ))}\r\n            </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"categoryId\" className=\"label font-semibold\">Категория</label>\r\n        <select\r\n          id=\"categoryId\"\r\n          value={categoryId}\r\n          className=\"w-full p-2 border rounded\"\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option value=\"\">Выберите категорию</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors\"\r\n      >\r\n        Сохранить изменения\r\n      </button>\r\n\r\n      {showConfirm && (\r\n        <ConfirmDialog\r\n          message=\"Вы уверены, что хотите сохранить изменения?\"\r\n          onConfirm={confirmSave}\r\n          onCancel={() => setShowConfirm(false)}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2845, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/editProductWrapper.tsx"],"sourcesContent":[" 'use client';\r\n\r\nimport { Category } from \"@prisma/client\";\r\nimport { useState } from \"react\";\r\nimport EditProductForm from \"./editProductForm\";\r\n\r\n\r\nexport default function EditProductWrapper({\r\n  product,\r\n  categories,\r\n  availableImages,// добавьте тип\r\n\r\n}: {\r\n  product: any;\r\n  categories: Category[];\r\n  availableImages: any; // добавьте тип\r\n}) {\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mb-6\">\r\n      <div className=\"flex justify-center mt-4\">\r\n        <button\r\n          onClick={() => setEditing((prev) => !prev)}\r\n          className=\"btn btn-primary py-2 px-6 text-lg\"\r\n        >\r\n          {editing ? \"Скрыть форму редактирования\" : \"Редактировать информацию о товаре\"}\r\n        </button>\r\n      </div>\r\n\r\n      {editing && (\r\n        <div className=\"mt-4 w-full max-w-2xl\">\r\n  <EditProductForm product={product} categories={categories} availableImages={availableImages} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJC;;;;AAOc,SAAS,mBAAmB,EACzC,OAAO,EACP,UAAU,EACV,eAAe,EAMhB;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBACC,SAAS,IAAM,WAAW,CAAC,OAAS,CAAC;oBACrC,WAAU;8BAET,UAAU,gCAAgC;;;;;;;;;;;YAI9C,yBACC,6WAAC;gBAAI,WAAU;0BACrB,cAAA,6WAAC,2JAAA,CAAA,UAAe;oBAAC,SAAS;oBAAS,YAAY;oBAAY,iBAAiB;;;;;;;;;;;;;;;;;AAK9E"}},
    {"offset": {"line": 2899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2905, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/producList/deleteProduct.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { deleteProduct } from \"~/app/api/action/product\";\r\nimport ConfirmDialog from \"./confirmDialog\";\r\n\r\nexport default function DeleteButton({ productId }: { productId: string }) {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const confirmSave = async () => {\r\n    setShowConfirm(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"id\", productId);\r\n\r\n    await deleteProduct(formData);\r\n  };\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setShowConfirm(true);\r\n  };\r\n  return (\r\n    // <form action={deleteProduct} className=\"flex justify-center mt-4\">\r\n    <form onSubmit={handleSubmit} className=\"flex justify-center mt-4\">\r\n      <input type=\"hidden\" name=\"id\" value={productId} />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-error py-2 px-6 text-lg\"\r\n        style={{\r\n          width: \"auto\",\r\n          paddingLeft: \"calc(1.5rem + 140px)\",\r\n          paddingRight: \"calc(1.5rem + 140px)\",\r\n        }}\r\n      >\r\n        Удалить\r\n      </button>\r\n      {showConfirm && (\r\n        <ConfirmDialog\r\n          message=\"Вы уверены, что хотите удалить данный товар?\"\r\n          onConfirm={confirmSave}\r\n          onCancel={() => setShowConfirm(false)}\r\n        />\r\n      )}\r\n    </form>\r\n    \r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAJA;;;;;AAMe,SAAS,aAAa,EAAE,SAAS,EAAyB;IACvE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,cAAc;QAClB,eAAe;QAEf,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,MAAM;QAEtB,MAAM,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD,EAAE;IACtB;IACA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,eAAe;IACjB;IACA,OACE,qEAAqE;kBACrE,6WAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6WAAC;gBAAM,MAAK;gBAAS,MAAK;gBAAK,OAAO;;;;;;0BACtC,6WAAC;gBACC,MAAK;gBACL,WAAU;gBACV,OAAO;oBACL,OAAO;oBACP,aAAa;oBACb,cAAc;gBAChB;0BACD;;;;;;YAGA,6BACC,6WAAC,yJAAA,CAAA,UAAa;gBACZ,SAAQ;gBACR,WAAW;gBACX,UAAU,IAAM,eAAe;;;;;;;;;;;;AAMzC"}},
    {"offset": {"line": 2973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/rerwies/ratingSelector.tsx"],"sourcesContent":["export default function RatingSelector({\r\n  rating,\r\n  setRating,\r\n}: {\r\n  rating: number;\r\n  setRating: (rating: number) => void;\r\n}) {\r\n  return (\r\n    <div className=\"form-control mb-4\">\r\n      <label htmlFor=\"rating\" className=\"label\">\r\n        <span className=\"label-text\">Рейтинг (необязательно)</span>\r\n      </label>\r\n      <select\r\n        id=\"rating\"\r\n        value={rating}\r\n        onChange={(e) => setRating(Number(e.target.value))}\r\n        className=\"select select-bordered w-full\"\r\n      >\r\n        <option value={0}>Не задано</option>\r\n        {[1, 2, 3, 4, 5].map((num) => (\r\n          <option key={num} value={num}>\r\n            {num}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAe,SAAS,eAAe,EACrC,MAAM,EACN,SAAS,EAIV;IACC,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAM,SAAQ;gBAAS,WAAU;0BAChC,cAAA,6WAAC;oBAAK,WAAU;8BAAa;;;;;;;;;;;0BAE/B,6WAAC;gBACC,IAAG;gBACH,OAAO;gBACP,UAAU,CAAC,IAAM,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;gBAChD,WAAU;;kCAEV,6WAAC;wBAAO,OAAO;kCAAG;;;;;;oBACjB;wBAAC;wBAAG;wBAAG;wBAAG;wBAAG;qBAAE,CAAC,GAAG,CAAC,CAAC,oBACpB,6WAAC;4BAAiB,OAAO;sCACtB;2BADU;;;;;;;;;;;;;;;;;AAOvB"}},
    {"offset": {"line": 3045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3051, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/rerwies/addreview.tsx"],"sourcesContent":["\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { useSession } from \"next-auth/react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import RatingSelector from \"./ratingSelector\";\r\n// import { api } from \"~/trpc/react\";\r\n\r\n// interface AddReviewProps {\r\n//   productId: string;\r\n// }\r\n\r\n// export default function AddReview({ productId }: AddReviewProps) {\r\n//   const { data: session, status } = useSession();\r\n//   const router = useRouter();\r\n//   const [rating, setRating] = useState<number>(0);\r\n//   const [comment, setComment] = useState<string>(\"\");\r\n//   const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const utils = api.useUtils();\r\n//   const createReview = api.review.create.useMutation({\r\n//     onSuccess: () => {\r\n//       setRating(0);\r\n//       setComment(\"\");\r\n//       setError(null);\r\n//       void utils.review.getByProduct.invalidate({ productId });\r\n//     },\r\n//     onError: (error) => {\r\n//       setError(error.message);\r\n//     },\r\n//     onSettled: () => {\r\n//       setIsSubmitting(false);\r\n//     },\r\n//   });\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n\r\n//     if (status === \"unauthenticated\") {\r\n//       router.push(\"/auth/signin\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!session?.user?.id) {\r\n//       setError(\"Ошибка авторизации. Пожалуйста, войдите снова.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!comment.trim()) {\r\n//       setError(\"Пожалуйста, оставьте комментарий\");\r\n//       return;\r\n//     }\r\n\r\n//     if (rating === 0) {\r\n//       setError(\"Пожалуйста, укажите рейтинг\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     setError(null);\r\n\r\n//       await createReview.mutateAsync({\r\n//         productId,\r\n//         userId: session.user.id, \r\n//         rating,\r\n//         comment,\r\n//       });\r\n\r\n//   };\r\n\r\n//   if (status === \"unauthenticated\") {\r\n//     return (\r\n//       <div className=\"my-8 p-4 max-w-xl mx-auto bg-base-200 rounded-lg shadow-md\">\r\n//         <h3 className=\"text-xl font-semibold mb-4\">Оставить отзыв</h3>\r\n//         <p className=\"mb-4\">Чтобы оставить отзыв, пожалуйста, войдите в систему.</p>\r\n//         <button \r\n//           onClick={() => router.push(\"/auth/signin\")}\r\n//           className=\"btn btn-primary\"\r\n//         >\r\n//           Войти\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"my-8 p-4 max-w-xl mx-auto bg-base-200 rounded-lg shadow-md\">\r\n//       <h3 className=\"text-xl font-semibold mb-4\">Оставить отзыв</h3>\r\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      \r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <div className=\"form-control\">\r\n//           <label className=\"label\">\r\n//             <span className=\"label-text\">Ваша оценка</span>\r\n//           </label>\r\n//           <RatingSelector rating={rating} setRating={setRating} />\r\n//         </div>\r\n\r\n//         <div className=\"form-control\">\r\n//           <label htmlFor=\"comment\" className=\"label\">\r\n//             <span className=\"label-text\">Ваш отзыв</span>\r\n//           </label>\r\n//           <textarea\r\n//             id=\"comment\"\r\n//             value={comment}\r\n//             onChange={(e) => setComment(e.target.value)}\r\n//             placeholder=\"Расскажите о вашем опыте...\"\r\n//             className=\"textarea textarea-bordered h-24\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-control mt-6\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             className={`btn btn-primary ${isSubmitting ? \"loading\" : \"\"}`}\r\n//             disabled={isSubmitting}\r\n//           >\r\n//             {isSubmitting ? \"Отправка...\" : \"Опубликовать отзыв\"}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport RatingSelector from \"./ratingSelector\";\r\nimport { api } from \"~/trpc/react\";\r\n\r\ninterface AddReviewProps {\r\n  productId: string;\r\n}\r\n\r\nexport default function AddReview({ productId }: AddReviewProps) {\r\n  const { data: session, status } = useSession();\r\n  const router = useRouter();\r\n  const [rating, setRating] = useState<number>(0);\r\n  const [comment, setComment] = useState<string>(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const utils = api.useUtils();\r\n  const createReview = api.review.create.useMutation({\r\n    onSuccess: () => {\r\n      setRating(0);\r\n      setComment(\"\");\r\n      setError(null);\r\n      void utils.review.getByProduct.invalidate({ productId });\r\n    },\r\n    onError: (error) => {\r\n      setError(error.message);\r\n    },\r\n    onSettled: () => {\r\n      setIsSubmitting(false);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (status === \"unauthenticated\") {\r\n      router.push(\"/auth/signin\");\r\n      return;\r\n    }\r\n\r\n    if (!session?.user?.id) {\r\n      setError(\"Ошибка авторизации. Пожалуйста, войдите снова.\");\r\n      return;\r\n    }\r\n\r\n    if (!comment.trim()) {\r\n      setError(\"Пожалуйста, оставьте комментарий\");\r\n      return;\r\n    }\r\n\r\n    if (rating === 0) {\r\n      setError(\"Пожалуйста, укажите рейтинг\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    await createReview.mutateAsync({\r\n      productId,\r\n      userId: session.user.id,\r\n      rating,\r\n      comment,\r\n    });\r\n  };\r\n\r\n  if (status === \"unauthenticated\") {\r\n    return (\r\n      <div className=\"my-8 p-4 max-w-xl mx-auto bg-base-200 rounded-lg shadow-md\">\r\n        <h3 className=\"text-xl font-semibold mb-4\">Оставить отзыв</h3>\r\n        <p className=\"mb-4\">Чтобы оставить отзыв, пожалуйста, войдите в систему.</p>\r\n        <button onClick={() => router.push(\"/auth/signin\")} className=\"btn btn-primary\">\r\n          Войти\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-8 p-4 max-w-xl mx-auto bg-base-200 rounded-lg shadow-md\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">Оставить отзыв</h3>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"form-control\">\r\n          <label className=\"label\">\r\n            <span className=\"label-text\">Ваша оценка</span>\r\n          </label>\r\n          <RatingSelector rating={rating} setRating={setRating} />\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"comment\" className=\"label\">\r\n            <span className=\"label-text\">Ваш отзыв</span>\r\n          </label>\r\n          <textarea\r\n            id=\"comment\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Расскажите о вашем опыте...\"\r\n            className=\"textarea textarea-bordered h-24\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-control mt-6\">\r\n          <button\r\n            type=\"submit\"\r\n            className={`btn btn-primary ${isSubmitting ? \"loading\" : \"\"}`}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? \"Отправка...\" : \"Опубликовать отзыв\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}