{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/api/action/user.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { db } from \"~/server/db\";\r\nimport { auth } from \"~/server/auth\";\r\nimport { $Enums } from \"@prisma/client\";\r\n\r\nexport async function createUser(formData: FormData) {\r\n  const fd = z\r\n    .object({\r\n      email: z.string().email(),\r\n      name: z.string(),\r\n      surname: z.string(),\r\n    })\r\n    .parse({\r\n      email: formData.get(\"email\"),\r\n      name: formData.get(\"name\"),\r\n      surname: formData.get(\"surname\"),\r\n    });\r\n  await db.user.create({ data: fd });\r\n  revalidatePath(\"/profile\");\r\n}\r\n\r\nexport async function deleteUser(formData: FormData) {\r\n  const fd = z\r\n    .object({\r\n      id: z.string(),\r\n    })\r\n    .parse({\r\n      id: formData.get(\"id\"),\r\n    });\r\n  await db.user.delete({ where: { id: fd.id } });\r\n  redirect(\"/profile\");\r\n}\r\n\r\n// export async function updateUser(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       id: z.string(),\r\n//       email: z.string().email(),\r\n//       name: z.string(),\r\n//       surname: z.string(),\r\n//       role: z.nativeEnum($Enums.Role),\r\n\r\n//     })\r\n//     .parse({\r\n//       id: formData.get(\"id\"),\r\n//       email: formData.get(\"email\"),\r\n//       name: formData.get(\"name\"),\r\n//       surname: formData.get(\"surname\"),\r\n//       role: formData.get(\"role\"),\r\n\r\n//     });\r\n//   await db.user.update({ where: { id: fd.id }, data: fd });\r\n//   //revalidatePath(\"/profile/\" + fd.id);\r\n//   revalidatePath(\"/profile\");\r\n// }\r\n\r\n  export async function updateUser(formData: FormData) {\r\n    const fd = z\r\n      .object({\r\n        id: z.string(),  \r\n        email: z.string().email(),    \r\n        name: z.string(),\r\n        surname: z.string(),\r\n        role: z.nativeEnum($Enums.Role),\r\n        image: z.string(),\r\n\r\n      })\r\n      .parse({\r\n        id: formData.get(\"id\"),  \r\n        image: formData.get(\"image\"),\r\n        email: formData.get(\"email\"),    \r\n        name: formData.get(\"name\"),\r\n        surname: formData.get(\"surname\"),\r\n        role: formData.get(\"role\"),\r\n      });\r\n    await db.user.update({ where: { id: fd.id }, data: fd });\r\n    revalidatePath(\"/profile\");\r\n    redirect(\"/profile\");\r\n  }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AAEA;;AAHA;AADA;;;;;;;;AAMO,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;QACvB,MAAM,qLAAA,CAAA,IAAC,CAAC,MAAM;QACd,SAAS,qLAAA,CAAA,IAAC,CAAC,MAAM;IACnB,GACC,KAAK,CAAC;QACL,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,SAAS,SAAS,GAAG,CAAC;IACxB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,MAAM;IAAG;IAChC,CAAA,GAAA,4PAAA,CAAA,iBAAc,AAAD,EAAE;AACjB;AAEO,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,IAAI,qLAAA,CAAA,IAAC,CAAC,MAAM;IACd,GACC,KAAK,CAAC;QACL,IAAI,SAAS,GAAG,CAAC;IACnB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,GAAG,EAAE;QAAC;IAAE;IAC5C,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAyBS,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,IAAI,qLAAA,CAAA,IAAC,CAAC,MAAM;QACZ,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;QACvB,MAAM,qLAAA,CAAA,IAAC,CAAC,MAAM;QACd,SAAS,qLAAA,CAAA,IAAC,CAAC,MAAM;QACjB,MAAM,qLAAA,CAAA,IAAC,CAAC,UAAU,CAAC,6HAAA,CAAA,SAAM,CAAC,IAAI;QAC9B,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM;IAEjB,GACC,KAAK,CAAC;QACL,IAAI,SAAS,GAAG,CAAC;QACjB,OAAO,SAAS,GAAG,CAAC;QACpB,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,SAAS,SAAS,GAAG,CAAC;QACtB,MAAM,SAAS,GAAG,CAAC;IACrB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,GAAG,EAAE;QAAC;QAAG,MAAM;IAAG;IACtD,CAAA,GAAA,4PAAA,CAAA,iBAAc,AAAD,EAAE;IACf,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IAzEoB;IAgBA;IAmCE;;AAnDF,8WAAA;AAgBA,8WAAA;AAmCE,8WAAA"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/profile/updateProfile.tsx"],"sourcesContent":["// components/UserForm.tsx\r\nimport React from \"react\";\r\nimport { deleteUser, updateUser } from \"~/app/api/action/user\";\r\n\r\ninterface UserFormProps {\r\n  user: {\r\n    id: string;\r\n    email: string | null;\r\n    name: string | null;\r\n    surname: string | null;\r\n    image: string | null;\r\n    role: string | null;\r\n  };\r\n  isAuthorized: boolean;\r\n  title: string;\r\n}\r\n\r\nexport default function UserForm({ user, isAuthorized, title }: UserFormProps) {\r\n  return (\r\n    <main className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-sm\">\r\n        <h1 className=\"text-xl font-bold mb-4\">{title}</h1>\r\n\r\n        <form action={updateUser} className=\"form-control\">\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <input type=\"hidden\" name=\"id\" defaultValue={user.id} />\r\n\r\n            <label>Электронная почта</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              required\r\n              className=\"input input-bordered\"\r\n              defaultValue={user.email ?? \"\"}\r\n            />\r\n\r\n            <label>Имя</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              className=\"input input-bordered\"\r\n              defaultValue={user.name ?? \"\"}\r\n            />\r\n\r\n            <label>Фамилия</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"surname\"\r\n              required\r\n              className=\"input input-bordered\"\r\n              defaultValue={user.surname ?? \"\"}\r\n            />\r\n\r\n            <label>Ссылка на фото</label>\r\n            <input\r\n              type=\"url\"\r\n              name=\"image\"\r\n              required\r\n              className=\"input input-bordered\"\r\n              defaultValue={user.image ?? \"\"}\r\n            />\r\n\r\n{isAuthorized ? (\r\n  <>\r\n    <label>Роль</label>\r\n    <select\r\n      name=\"role\"\r\n      required\r\n      className=\"select select-bordered\"\r\n      defaultValue={user.role ?? \"USER\"}\r\n    >\r\n      <option value=\"USER\">USER</option>\r\n      <option value=\"ADMIN\">ADMIN</option>\r\n      <option value=\"WORKER\">WORKER</option>\r\n    </select>\r\n  </>\r\n) : (\r\n  // Передаём текущее значение роли в скрытом поле\r\n  <input type=\"hidden\" name=\"role\" value={user.role ?? \"USER\"} />\r\n)}\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Обновить\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {isAuthorized && (\r\n          <form action={deleteUser} className=\"form-control mt-4\">\r\n            <div className=\"flex max-w-xs flex-col space-y-2\">\r\n              <input type=\"hidden\" name=\"id\" defaultValue={user.id ?? \"\"} />\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Удалить\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAE1B;;;AAee,SAAS,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAiB;IAC3E,qBACE,6WAAC;QAAK,WAAU;kBACd,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAG,WAAU;8BAA0B;;;;;;8BAExC,6WAAC;oBAAK,QAAQ,mIAAA,CAAA,aAAU;oBAAE,WAAU;8BAClC,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAM,MAAK;gCAAS,MAAK;gCAAK,cAAc,KAAK,EAAE;;;;;;0CAEpD,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,KAAK,IAAI;;;;;;0CAG9B,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,IAAI,IAAI;;;;;;0CAG7B,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,OAAO,IAAI;;;;;;0CAGhC,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,KAAK,IAAI;;;;;;4BAGzC,6BACC;;kDACE,6WAAC;kDAAM;;;;;;kDACP,6WAAC;wCACC,MAAK;wCACL,QAAQ;wCACR,WAAU;wCACV,cAAc,KAAK,IAAI,IAAI;;0DAE3B,6WAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,6WAAC;gDAAO,OAAM;0DAAQ;;;;;;0DACtB,6WAAC;gDAAO,OAAM;0DAAS;;;;;;;;;;;;;+CAI3B,gDAAgD;0CAChD,6WAAC;gCAAM,MAAK;gCAAS,MAAK;gCAAO,OAAO,KAAK,IAAI,IAAI;;;;;;0CAG3C,6WAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAkB;;;;;;;;;;;;;;;;;gBAMrD,8BACC,6WAAC;oBAAK,QAAQ,mIAAA,CAAA,aAAU;oBAAE,WAAU;8BAClC,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAM,MAAK;gCAAS,MAAK;gCAAK,cAAc,KAAK,EAAE,IAAI;;;;;;0CACxD,6WAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAShE"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/profile/%5Bid%5D/page.tsx"],"sourcesContent":["// import React from 'react';\r\n// import { db } from '~/server/db';\r\n// import { deleteUser, updateUser } from '~/app/api/action/user';\r\n// import { auth } from '~/server/auth';\r\n\r\n// export default async function Page({ params }: { params: { id: string } }) {\r\n//   const user = await db.user.findUnique({\r\n//     where: { id: params.id },\r\n//   });\r\n\r\n//   if (!user) {\r\n//     return <div>User not found</div>;\r\n//   }\r\n//   // const session = await auth();\r\n//  let NameHTML = \"\"\r\n//   const role = (await auth())?.user.role;\r\n//   const isAuthorized = role === \"ADMIN\"\r\n//   // if (session) {\r\n//   //   const { user } = session;\r\n//   //   if (!user.name ) {\r\n//   //     NameHTML = \"Заверешение регистрации\"\r\n//   // if(!user.name) NameHTML = \"Заверешение регистрации\"\r\n//   // else NameHTML = \"Редактирование профиля\"\r\n//   //   }\r\n//   //   else NameHTML = \"Редактирование профиля\"\r\n//   // }\r\n\r\n//   return (\r\n//     <main className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-sm\">\r\n//         <h1 className=\"text-xl font-bold mb-4\">{NameHTML}</h1>\r\n//         <form action={updateUser} className=\"form-control\">\r\n//           <div className=\"flex flex-col space-y-4\">\r\n//             <input type=\"hidden\" name=\"id\" defaultValue={user.id} />\r\n//             <label>Электронная почта</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             required\r\n//             className=\"input input-bordered\"\r\n//             defaultValue={user.email ?? \"\"}\r\n//           />\r\n//           <label>Имя</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             required\r\n//             className=\"input input-bordered\"\r\n//             defaultValue={user.name ?? \"\"}\r\n//           />\r\n//           <label>Фамилия</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"surname\"\r\n//             required\r\n//             className=\"input input-bordered\"\r\n//             defaultValue={user.surname ?? \"\"}\r\n//           />\r\n//           <label>Ссылка на фото</label>\r\n// <input\r\n//   type=\"url\"\r\n//   name=\"image\"\r\n//   className=\"input input-bordered\"\r\n//   defaultValue={user.image ?? \"\"}\r\n// />\r\n//           {isAuthorized && (\r\n//         <><label>Роль</label><select\r\n//                 name=\"role\"\r\n//                 required\r\n//                 className=\"select select-bordered\"\r\n//                 defaultValue={user.role ?? \"USER\"}\r\n//               >\r\n//                 <option value=\"USER\">USER</option>\r\n//                 <option value=\"ADMIN\">ADMIN</option>\r\n//                 <option value=\"WORKER\">WORKER</option>\r\n//               </select></>\r\n          \r\n//         )}\r\n         \r\n//           <button type=\"submit\" className=\"btn btn-primary\">\r\n//             Обновить\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//       {isAuthorized && (\r\n//         <form action={deleteUser} className=\"form-control\">\r\n//         <div className=\"flex max-w-xs flex-col space-y-2\">\r\n//           <input type=\"hidden\" name=\"id\" defaultValue={user.id ?? \"\"} />\r\n//           <button type=\"submit\" className=\"btn btn-primary\">\r\n//             Удалить\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n          \r\n//         )}\r\n//       {/* <form action={deleteUser} className=\"form-control\">\r\n//         <div className=\"flex max-w-xs flex-col space-y-2\">\r\n//           <input type=\"hidden\" name=\"id\" defaultValue={user.id ?? \"\"} />\r\n//           <button type=\"submit\" className=\"btn btn-primary\">\r\n//             Удалить\r\n//           </button>\r\n//         </div>\r\n//       </form> */}\r\n//       </div>\r\n//     </main>\r\n//   );\r\n// }\r\nimport React from \"react\";\r\nimport { db } from \"~/server/db\";\r\nimport { auth } from \"~/server/auth\";\r\nimport UserForm from \"~/app/_components/profile/updateProfile\";\r\n\r\nexport default async function Page({ params }: { params: { id: string } }) {\r\n  const user = await db.user.findUnique({\r\n    where: { id: params.id },\r\n  });\r\n\r\n  if (!user) {\r\n    return <div>User not found</div>;\r\n  }\r\n\r\n  const role = (await auth())?.user.role;\r\n  const isAuthorized = role === \"ADMIN\";\r\n\r\n  const hasName = user.name && user.surname;\r\n  const title = hasName ? \"Редактирование профиля\" : \"Завершите регистрацию\";\r\n\r\n  return <UserForm user={user} isAuthorized={isAuthorized} title={title} />;\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,oCAAoC;AACpC,kEAAkE;AAClE,wCAAwC;AAExC,+EAA+E;AAC/E,4CAA4C;AAC5C,gCAAgC;AAChC,QAAQ;AAER,iBAAiB;AACjB,wCAAwC;AACxC,MAAM;AACN,qCAAqC;AACrC,qBAAqB;AACrB,4CAA4C;AAC5C,0CAA0C;AAC1C,sBAAsB;AACtB,mCAAmC;AACnC,4BAA4B;AAC5B,gDAAgD;AAChD,2DAA2D;AAC3D,gDAAgD;AAChD,WAAW;AACX,kDAAkD;AAClD,SAAS;AAET,aAAa;AACb,mFAAmF;AACnF,4EAA4E;AAC5E,iEAAiE;AACjE,8DAA8D;AAC9D,sDAAsD;AACtD,uEAAuE;AACvE,+CAA+C;AAC/C,mBAAmB;AACnB,2BAA2B;AAC3B,2BAA2B;AAC3B,uBAAuB;AACvB,+CAA+C;AAC/C,8CAA8C;AAC9C,eAAe;AACf,+BAA+B;AAC/B,mBAAmB;AACnB,0BAA0B;AAC1B,0BAA0B;AAC1B,uBAAuB;AACvB,+CAA+C;AAC/C,6CAA6C;AAC7C,eAAe;AACf,mCAAmC;AACnC,mBAAmB;AACnB,0BAA0B;AAC1B,6BAA6B;AAC7B,uBAAuB;AACvB,+CAA+C;AAC/C,gDAAgD;AAChD,eAAe;AACf,0CAA0C;AAC1C,SAAS;AACT,eAAe;AACf,iBAAiB;AACjB,qCAAqC;AACrC,oCAAoC;AACpC,KAAK;AACL,+BAA+B;AAC/B,uCAAuC;AACvC,8BAA8B;AAC9B,2BAA2B;AAC3B,qDAAqD;AACrD,qDAAqD;AACrD,kBAAkB;AAClB,qDAAqD;AACrD,uDAAuD;AACvD,yDAAyD;AACzD,6BAA6B;AAE7B,aAAa;AAEb,+DAA+D;AAC/D,uBAAuB;AACvB,sBAAsB;AACtB,iBAAiB;AACjB,gBAAgB;AAChB,2BAA2B;AAC3B,8DAA8D;AAC9D,6DAA6D;AAC7D,2EAA2E;AAC3E,+DAA+D;AAC/D,sBAAsB;AACtB,sBAAsB;AACtB,iBAAiB;AACjB,gBAAgB;AAEhB,aAAa;AACb,gEAAgE;AAChE,6DAA6D;AAC7D,2EAA2E;AAC3E,+DAA+D;AAC/D,sBAAsB;AACtB,sBAAsB;AACtB,iBAAiB;AACjB,oBAAoB;AACpB,eAAe;AACf,cAAc;AACd,OAAO;AACP,IAAI;;;;;AAEJ;AACA;AACA;;;;;AAEe,eAAe,KAAK,EAAE,MAAM,EAA8B;IACvE,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,IAAI,OAAO,EAAE;QAAC;IACzB;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO,6WAAC;sBAAI;;;;;;IACd;IAEA,MAAM,OAAO,CAAC,MAAM,CAAA,GAAA,8HAAA,CAAA,OAAI,AAAD,GAAG,GAAG,KAAK;IAClC,MAAM,eAAe,SAAS;IAE9B,MAAM,UAAU,KAAK,IAAI,IAAI,KAAK,OAAO;IACzC,MAAM,QAAQ,UAAU,2BAA2B;IAEnD,qBAAO,6WAAC,sJAAA,CAAA,UAAQ;QAAC,MAAM;QAAM,cAAc;QAAc,OAAO;;;;;;AAClE"}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}