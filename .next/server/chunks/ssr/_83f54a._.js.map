{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/api/action/product.ts"],"sourcesContent":["// \"use server\";\r\n\r\n// import { revalidatePath } from \"next/cache\";\r\n// import { redirect } from \"next/navigation\";\r\n// import { z } from \"zod\";\r\n// import { auth } from \"~/server/auth\";\r\n// import { db } from \"~/server/db\";\r\n// import { createClient } from '@supabase/supabase-js';\r\n// export async function createProduct(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       name: z.string(),\r\n//       description: z.string(),\r\n//       price: z.coerce.number().positive(),\r\n//       imageUrl: z.string().url().optional().or(z.literal(\"\")),\r\n//       categoryId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.create({\r\n//     data: {\r\n//       name: fd.name,\r\n//       description: fd.description,\r\n//       price: fd.price,\r\n//       imageUrl: fd.imageUrl || \"\",\r\n//       categoryId: fd.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(\"/product\");\r\n//   redirect(\"/product\"); \r\n// }\r\n// const supabase = createClient(\r\n//   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n// );\r\n\r\n// // export async function createProduct(formData: FormData) {\r\n// //   const name = formData.get(\"name\") as string;\r\n// //   const description = formData.get(\"description\") as string;\r\n// //   const price = parseFloat(formData.get(\"price\") as string);\r\n// //   const categoryId = formData.get(\"categoryId\") as string;\r\n// //   const file = formData.get(\"image\") as File;\r\n\r\n// //   if (!file || file.size === 0) throw new Error(\"Файл изображения не выбран\");\r\n\r\n// //   const filePath = `products/${Date.now()}-${file.name}`;\r\n\r\n// //   // Загрузка в Supabase Storage\r\n// //   const { error: uploadError } = await supabase.storage\r\n// //     .from('product-images')\r\n// //     .upload(filePath, file, { upsert: true });\r\n\r\n// //   if (uploadError) throw uploadError;\r\n\r\n// //   const { data: imageData } = supabase\r\n// //     .storage\r\n// //     .from('product-images')\r\n// //     .getPublicUrl(filePath);\r\n\r\n// //   const imageUrl = imageData?.publicUrl;\r\n\r\n// //   if (!imageUrl) throw new Error(\"Не удалось получить URL изображения\");\r\n\r\n// //   // Сохранение в PostgreSQL\r\n// //   await db.product.create({\r\n// //     data: {\r\n// //       name,\r\n// //       description,\r\n// //       price,\r\n// //       categoryId,\r\n// //       imageUrl,\r\n// //     },\r\n// //   });\r\n\r\n// //   redirect('/admin/products'); // или куда тебе нужно\r\n// // }\r\n\r\n// export async function updateProduct(formData: FormData) {\r\n//   const data = z\r\n//     .object({\r\n//       id: z.string(),\r\n//       name: z.string(),\r\n//       description: z.string().optional(),\r\n//       price: z.coerce.number().nonnegative(),\r\n//       imageUrl: z.string().url().optional(),\r\n//       categoryId: z.string().optional(),\r\n//     })\r\n//     .parse({\r\n//       id: formData.get(\"id\"),\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.update({\r\n//     where: { id: data.id },\r\n//     data: {\r\n//       name: data.name,\r\n//       description: data.description,\r\n//       price: data.price,\r\n//       imageUrl: data.imageUrl,\r\n//       categoryId: data.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(`/products/${data.id}`); \r\n// }\r\n\r\n// export async function deleteProduct(formData: FormData) {\r\n//     const fd = z\r\n//       .object({\r\n//         id: z.string(),\r\n//       })\r\n//       .parse({\r\n//         id: formData.get(\"id\"),\r\n//       });\r\n//     await db.product.delete({ where: { id: fd.id } });\r\n//     redirect(\"/product\");\r\n//   }\r\n\r\n\r\n// export async function addProductCart(formData: FormData) {\r\n//   const session = await auth();\r\n\r\n//   if (!session?.user?.id) {\r\n//     throw new Error(\"Пользователь не авторизован\");\r\n//   }\r\n\r\n//   const { productId } = z\r\n//     .object({\r\n//       productId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       productId: formData.get(\"productId\"),\r\n//     });\r\n\r\n//   const existingCartItem = await db.cartItem.findFirst({\r\n//     where: {\r\n//       userId: session.user.id,\r\n//       productId,\r\n//     },\r\n//   });\r\n\r\n//   if (existingCartItem) {\r\n//     await db.cartItem.update({\r\n//       where: { id: existingCartItem.id },\r\n//       data: { quantity: { increment: 1 } },\r\n//     });\r\n//   } else {\r\n//     await db.cartItem.create({\r\n//       data: {\r\n//         userId: session.user.id,\r\n//         productId,\r\n//         quantity: 1,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//    redirect(\"/cart\");\r\n// }\r\n\"use server\";\r\n\r\nimport { randomUUID } from \"crypto\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { auth } from \"~/server/auth\";\r\nimport { db } from \"~/server/db\";\r\n\r\n// export async function createProduct(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       name: z.string(),\r\n//       description: z.string(),\r\n//       price: z.coerce.number().positive(),\r\n//       imageUrl: z.string().url().optional().or(z.literal(\"\")),\r\n//       categoryId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       name: formData.get(\"name\"),\r\n//       description: formData.get(\"description\"),\r\n//       price: formData.get(\"price\"),\r\n//       imageUrl: formData.get(\"imageUrl\"),\r\n//       categoryId: formData.get(\"categoryId\"),\r\n//     });\r\n\r\n//   await db.product.create({\r\n//     data: {\r\n//       name: fd.name,\r\n//       description: fd.description,\r\n//       price: fd.price,\r\n//       imageUrl: fd.imageUrl || \"\",\r\n//       categoryId: fd.categoryId,\r\n//     },\r\n//   });\r\n\r\n//   revalidatePath(\"/product\");\r\n//   redirect(\"/product\"); \r\n// }\r\nexport async function createProduct(formData: FormData) {\r\n  const name = formData.get(\"name\") as string;\r\n  const description = formData.get(\"description\") as string;\r\n  const price = Number(formData.get(\"price\"));\r\n  const categoryId = formData.get(\"categoryId\") as string;\r\n  const imageUrl = formData.get(\"imageUrl\") as string;\r\n\r\n  if (!imageUrl) throw new Error(\"Изображение не выбрано\");\r\n\r\n  await db.product.create({\r\n    data: {\r\n      name,\r\n      description,\r\n      price,\r\n      categoryId,\r\n      imageUrl,\r\n    },\r\n  });\r\n\r\n  redirect(\"/products\");\r\n}\r\n\r\n\r\nexport async function updateProduct(formData: FormData) {\r\n  const data = z\r\n    .object({\r\n      id: z.string(),\r\n      name: z.string(),\r\n      description: z.string().optional(),\r\n      price: z.coerce.number().nonnegative(),\r\n      imageUrl: z.string().url().optional(),\r\n      categoryId: z.string().optional(),\r\n    })\r\n    .parse({\r\n      id: formData.get(\"id\"),\r\n      name: formData.get(\"name\"),\r\n      description: formData.get(\"description\"),\r\n      price: formData.get(\"price\"),\r\n      imageUrl: formData.get(\"imageUrl\"),\r\n      categoryId: formData.get(\"categoryId\"),\r\n    });\r\n\r\n  await db.product.update({\r\n    where: { id: data.id },\r\n    data: {\r\n      name: data.name,\r\n      description: data.description,\r\n      price: data.price,\r\n      imageUrl: data.imageUrl,\r\n      categoryId: data.categoryId,\r\n    },\r\n  });\r\n\r\n  revalidatePath(`/products/${data.id}`); \r\n}\r\n\r\nexport async function deleteProduct(formData: FormData) {\r\n    const fd = z\r\n      .object({\r\n        id: z.string(),\r\n      })\r\n      .parse({\r\n        id: formData.get(\"id\"),\r\n      });\r\n    await db.product.delete({ where: { id: fd.id } });\r\n    redirect(\"/product\");\r\n  }\r\n\r\n\r\n// export async function addProductCart(formData: FormData) {\r\n//   const session = await auth();\r\n\r\n//   if (!session?.user?.id) {\r\n//     throw new Error(\"Пользователь не авторизован\");\r\n//   }\r\n\r\n//   const { productId } = z\r\n//     .object({\r\n//       productId: z.string(),\r\n//     })\r\n//     .parse({\r\n//       productId: formData.get(\"productId\"),\r\n//     });\r\n\r\n//   const existingCartItem = await db.cartItem.findFirst({\r\n//     where: {\r\n//       userId: session.user.id,\r\n//       productId,\r\n//     },\r\n//   });\r\n\r\n//   if (existingCartItem) {\r\n//     await db.cartItem.update({\r\n//       where: { id: existingCartItem.id },\r\n//       data: { quantity: { increment: 1 } },\r\n//     });\r\n//   } else {\r\n//     await db.cartItem.create({\r\n//       data: {\r\n//         userId: session.user.id,\r\n//         productId,\r\n//         quantity: 1,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//    redirect(\"/cart\");\r\n// }\r\nexport async function addProductCart(formData: FormData) {\r\n  const session = await auth();\r\n\r\n  if (!session?.user?.id) {\r\n    throw new Error(\"Пользователь не авторизован\");\r\n  }\r\n\r\n  const { productId, quantity } = z\r\n    .object({\r\n      productId: z.string(),\r\n      quantity: z.string().transform((val) => parseInt(val, 10)),\r\n    })\r\n    .parse({\r\n      productId: formData.get(\"productId\"),\r\n      quantity: formData.get(\"quantity\"),\r\n    });\r\n\r\n  const existingCartItem = await db.cartItem.findFirst({\r\n    where: {\r\n      userId: session.user.id,\r\n      productId,\r\n    },\r\n  });\r\n\r\n  if (existingCartItem) {\r\n    await db.cartItem.update({\r\n      where: { id: existingCartItem.id },\r\n      data: { quantity: { increment: quantity } },\r\n    });\r\n  } else {\r\n    await db.cartItem.create({\r\n      data: {\r\n        userId: session.user.id,\r\n        productId,\r\n        quantity,\r\n      },\r\n    });\r\n  }\r\n\r\n  redirect(\"/cart\");\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/lib/getSupabaseImages.tsx"],"sourcesContent":["import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\r\nimport { cookies } from 'next/headers';\r\nexport async function getImagesFromSupabase() {\r\n  // const supabase = createServerComponentClient({ cookies });\r\n  const cookiesStore = await cookies();\r\n  const token = cookiesStore.get('sb-wsfwukshetdvuhbghnjj-auth-token');\r\n  // Проверяем корень\r\n  let folder = '';\r\n  console.log(`Попытка получить файлы из папки \"${folder || '[корень]'}\"`);\r\n  let { data, error } = await supabase\r\n    .storage\r\n    .from('product-images')\r\n    .list(folder, { limit: 100 });\r\n\r\n  console.log(`Файлы из папки \"${folder || '[корень]'}\":`, data);\r\n  console.log(`Ошибки:`, error);\r\n\r\n  if (!data || data.length === 0) {\r\n    folder = 'uploads';\r\n    console.log(`Файлы не найдены в папке корня, пытаемся из папки: \"${folder}\"`);\r\n    ({ data, error } = await supabase\r\n      .storage\r\n      .from('product-images')\r\n      .list(folder, { limit: 100 }));\r\n\r\n    console.log(`Файлы из папки \"${folder}\":`, data);\r\n    console.log(`Ошибки:`, error);\r\n\r\n    if (error) {\r\n      console.error('Ошибка получения изображений:', error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  if (!data) {\r\n    console.warn('Файлы не найдены в бакете и папке:', folder);\r\n    return [];\r\n  }\r\n\r\n  const images = data.map(item => ({\r\n    name: item.name,\r\n    url: `https://wsfwukshetdvuhbghnjj.supabase.co/storage/v1/object/public/product-images/${folder ? folder + '/' : ''}${item.name}`,\r\n  }));\r\n\r\n  return images;\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AACO,eAAe;IACpB,6DAA6D;IAC7D,MAAM,eAAe,MAAM,CAAA,GAAA,8PAAA,CAAA,UAAO,AAAD;IACjC,MAAM,QAAQ,aAAa,GAAG,CAAC;IAC/B,mBAAmB;IACnB,IAAI,SAAS;IACb,QAAQ,GAAG,CAAC,CAAC,iCAAiC,EAAE,UAAU,WAAW,CAAC,CAAC;IACvE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,OAAO,CACP,IAAI,CAAC,kBACL,IAAI,CAAC,QAAQ;QAAE,OAAO;IAAI;IAE7B,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,UAAU,WAAW,EAAE,CAAC,EAAE;IACzD,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE;IAEvB,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,SAAS;QACT,QAAQ,GAAG,CAAC,CAAC,oDAAoD,EAAE,OAAO,CAAC,CAAC;QAC5E,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACtB,OAAO,CACP,IAAI,CAAC,kBACL,IAAI,CAAC,QAAQ;YAAE,OAAO;QAAI,EAAE;QAE/B,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,OAAO,EAAE,CAAC,EAAE;QAC3C,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE;QAEvB,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,iCAAiC,MAAM,OAAO;YAC5D,OAAO,EAAE;QACX;IACF;IAEA,IAAI,CAAC,MAAM;QACT,QAAQ,IAAI,CAAC,sCAAsC;QACnD,OAAO,EAAE;IACX;IAEA,MAAM,SAAS,KAAK,GAAG,CAAC,CAAA,OAAQ,CAAC;YAC/B,MAAM,KAAK,IAAI;YACf,KAAK,CAAC,iFAAiF,EAAE,SAAS,SAAS,MAAM,KAAK,KAAK,IAAI,EAAE;QACnI,CAAC;IAED,OAAO;AACT"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/addProduct/page.tsx"],"sourcesContent":["\r\n// import { db } from \"~/server/db\";\r\n// import { createProduct } from \"../api/action/product\";\r\n\r\n// export default async function AddProductPage() {\r\n//   const catalog = await db.category.findMany();\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-2xl mx-auto bg-white shadow-lg rounded-lg\">\r\n//       <h1 className=\"text-3xl font-bold mb-6 text-center\">Добавить новый товар</h1>\r\n\r\n//       <form className=\"space-y-6\" action={createProduct}>\r\n//         <div>\r\n//           <label htmlFor=\"name\" className=\"label font-semibold\">Название товара</label>\r\n//           <input\r\n//             id=\"name\"\r\n//             name=\"name\"\r\n//             required\r\n//             className=\"input input-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//             placeholder=\"Введите название товара\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label htmlFor=\"description\" className=\"label font-semibold\">Описание</label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             name=\"description\"\r\n//             required\r\n//             className=\"textarea textarea-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//             placeholder=\"Введите описание товара\"\r\n//             rows={4}\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label htmlFor=\"price\" className=\"label font-semibold\">Цена</label>\r\n//           <input\r\n//             id=\"price\"\r\n//             name=\"price\"\r\n//             type=\"number\"\r\n//             required\r\n//             className=\"input input-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//             placeholder=\"Введите цену товара\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//   <label htmlFor=\"image\" className=\"label font-semibold\">Изображение товара</label>\r\n//   <input\r\n//     id=\"image\"\r\n//     name=\"image\"\r\n//     type=\"file\"\r\n//     accept=\"image/*\"\r\n//     required\r\n//     className=\"file-input file-input-bordered w-full p-3 rounded-md border-gray-300\"\r\n//   />\r\n// </div>\r\n\r\n//         <div>\r\n//           <label htmlFor=\"categoryId\" className=\"label font-semibold\">Категория товара</label>\r\n//           <select\r\n//             id=\"categoryId\"\r\n//             name=\"categoryId\"\r\n//             required\r\n//             className=\"select select-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//           >\r\n//             <option value=\"\">Выберите категорию</option>\r\n//             {catalog.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"flex justify-center\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"btn btn-primary w-full py-3 rounded-md text-white bg-purple-600 hover:bg-purple-700 transition duration-300\"\r\n//           >\r\n//             Добавить товар\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n// import { db } from \"~/server/db\";\r\n// import { createProduct } from \"../api/action/product\";\r\n// import { getImagesFromSupabase } from \"~/lib/getSupabaseImages\";\r\n\r\n// export default async function AddProductPage() {\r\n//   const catalog = await db.category.findMany();\r\n//   const images = await getImagesFromSupabase();\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-2xl mx-auto bg-white shadow-lg rounded-lg\">\r\n//       <h1 className=\"text-3xl font-bold mb-6 text-center\">Добавить новый товар</h1>\r\n\r\n//       <form className=\"space-y-6\" action={createProduct}>\r\n//         {/* Название, описание, цена... */}\r\n\r\n//         <div>\r\n//           <label htmlFor=\"imageUrl\" className=\"label font-semibold\">Выбери изображение</label>\r\n//           <select\r\n//             id=\"imageUrl\"\r\n//             name=\"imageUrl\"\r\n//             required\r\n//             className=\"select select-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//           >\r\n//             <option value=\"\">Выбери изображение</option>\r\n//             {images.map((img) => (\r\n//               <option key={img.name} value={img.url}>\r\n//                 {img.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n//             {images.map((img) => (\r\n//               <img\r\n//                 key={img.name}\r\n//                 src={img.url}\r\n//                 alt={img.name}\r\n//                 className=\"w-full h-24 object-cover border rounded-md\"\r\n//               />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label htmlFor=\"categoryId\" className=\"label font-semibold\">Категория товара</label>\r\n//           <select\r\n//             id=\"categoryId\"\r\n//             name=\"categoryId\"\r\n//             required\r\n//             className=\"select select-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n//           >\r\n//             <option value=\"\">Выберите категорию</option>\r\n//             {catalog.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"btn btn-primary w-full py-3 rounded-md text-white bg-purple-600 hover:bg-purple-700 transition duration-300\"\r\n//         >\r\n//           Добавить товар\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n// app/products/add/page.tsx или аналогичный маршрут\r\n\r\n// ~/app/products/add/page.tsx (или как у тебя устроена страница добавления товара)\r\nimport { db } from \"~/server/db\";\r\nimport { createProduct } from \"../api/action/product\";\r\nimport { getImagesFromSupabase } from \"~/lib/getSupabaseImages\";\r\n\r\nexport default async function AddProductPage() {\r\n  const catalog = await db.category.findMany();\r\n  const images = await getImagesFromSupabase();\r\n  console.log('❌ ❌ ❌ ❌ ❌ ❌ ❌');\r\n\r\n  console.log('Images from Supabase:', images);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto bg-white shadow-lg rounded-lg\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">Добавить новый товар</h1>\r\n\r\n      <form className=\"space-y-6\" action={createProduct}>\r\n        <div>\r\n          <label htmlFor=\"imageUrl\" className=\"label font-semibold\">Выбери изображение</label>\r\n          <select\r\n            id=\"imageUrl\"\r\n            name=\"imageUrl\"\r\n            required\r\n            className=\"select select-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n          >\r\n            <option value=\"\">Выбери изображение</option>\r\n            {images.map((img) => (\r\n              <option key={img.name} value={img.url}>\r\n                {img.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n            {images.map((img) => (\r\n              <img\r\n                key={img.name}\r\n                src={img.url}\r\n                alt={img.name}\r\n                className=\"w-full h-24 object-cover border rounded-md\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"categoryId\" className=\"label font-semibold\">Категория товара</label>\r\n          <select\r\n            id=\"categoryId\"\r\n            name=\"categoryId\"\r\n            required\r\n            className=\"select select-bordered w-full p-3 rounded-md border-gray-300 focus:ring-2 focus:ring-purple-400\"\r\n          >\r\n            <option value=\"\">Выберите категорию</option>\r\n            {catalog.map((category) => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary w-full py-3 rounded-md text-white bg-purple-600 hover:bg-purple-700 transition duration-300\"\r\n        >\r\n          Добавить товар\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}