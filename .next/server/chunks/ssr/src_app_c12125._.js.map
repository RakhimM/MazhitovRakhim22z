{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/ticket/messageList.tsx"],"sourcesContent":["\"use client\";\r\nimport { RefObject } from \"react\";\r\n\r\nexport default function MessageList(\r\n  {\r\n    messages,\r\n    isLoading,\r\n    isError,\r\n    messagesEndRef,\r\n    currentUserId,\r\n    role,\r\n  }: {\r\n    messages?: { messages: { message: string | null; supportAgent?: boolean; createdAt: string; userId: string; }[] | null } | null;\r\n    isLoading: boolean;\r\n    isError: boolean;\r\n    messagesEndRef: RefObject<HTMLDivElement>;\r\n    currentUserId: string;\r\n    role: string | undefined;\r\n  }\r\n) {\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\r\n        <div className=\"text-center text-gray-400\">Загрузка сообщений...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\r\n        <div className=\"text-center text-red-600\">Ошибка загрузки сообщений</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const msgs = messages?.messages ?? [];\r\n\r\n  return (\r\n    <div className=\"flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50\">\r\n      {msgs.length === 0 ? (\r\n        <div className=\"text-gray-500 text-center mt-10\">Сообщений пока нет.</div>\r\n      ) : (\r\n        msgs.map((msg, i) => {\r\n          const isCurrentUser = msg.userId === currentUserId;  \r\n          const isSupport = msg.supportAgent === true;\r\n\r\n          return (\r\n            <div\r\n              key={i}\r\n              className={`max-w-[80%] p-3 rounded-lg shadow ${\r\n                isCurrentUser\r\n                  ? \"bg-blue-100 self-end ml-auto\"  \r\n                  : \"bg-gray-200 self-start\"         \r\n              }`}\r\n            >\r\n              <p className=\"text-sm\">{msg.message}</p>\r\n              <div className=\"text-xs text-gray-500 mt-1 text-right\">\r\n              <div className=\"flex\">\r\n</div>\r\n                {new Date(msg.createdAt).toLocaleString()}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAGe,SAAS,YACtB,EACE,QAAQ,EACR,SAAS,EACT,OAAO,EACP,cAAc,EACd,aAAa,EACb,IAAI,EAQL;IAED,IAAI,WAAW;QACb,qBACE,6VAAC;YAAI,WAAU;sBACb,cAAA,6VAAC;gBAAI,WAAU;0BAA4B;;;;;;;;;;;IAGjD;IAEA,IAAI,SAAS;QACX,qBACE,6VAAC;YAAI,WAAU;sBACb,cAAA,6VAAC;gBAAI,WAAU;0BAA2B;;;;;;;;;;;IAGhD;IAEA,MAAM,OAAO,UAAU,YAAY,EAAE;IAErC,qBACE,6VAAC;QAAI,WAAU;;YACZ,KAAK,MAAM,KAAK,kBACf,6VAAC;gBAAI,WAAU;0BAAkC;;;;;uBAEjD,KAAK,GAAG,CAAC,CAAC,KAAK;gBACb,MAAM,gBAAgB,IAAI,MAAM,KAAK;gBACrC,MAAM,YAAY,IAAI,YAAY,KAAK;gBAEvC,qBACE,6VAAC;oBAEC,WAAW,CAAC,kCAAkC,EAC5C,gBACI,iCACA,0BACJ;;sCAEF,6VAAC;4BAAE,WAAU;sCAAW,IAAI,OAAO;;;;;;sCACnC,6VAAC;4BAAI,WAAU;;8CACf,6VAAC;oCAAI,WAAU;;;;;;gCAEZ,IAAI,KAAK,IAAI,SAAS,EAAE,cAAc;;;;;;;;mBAXpC;;;;;YAeX;0BAEF,6VAAC;gBAAI,KAAK;;;;;;;;;;;;AAGhB"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/ticket/messageInput.tsx"],"sourcesContent":["\"use client\"\r\nimport { RefObject } from \"react\";\r\n\r\ninterface Props {\r\n  input: string;\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onSubmit: (e: React.FormEvent) => void;\r\n  textareaRef: RefObject<HTMLTextAreaElement>;\r\n}\r\n\r\nexport default function MessageInput({\r\n  input,\r\n  onChange,\r\n  onSubmit,\r\n  textareaRef,\r\n}: Props) {\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      className=\"p-4 bg-white border-t flex items-end gap-2\"\r\n    >\r\n      <textarea\r\n        ref={textareaRef}\r\n        value={input}\r\n        onChange={onChange}\r\n        rows={1}\r\n        placeholder=\"Введите сообщение...\"\r\n        className=\"flex-1 resize-none overflow-hidden p-2 border rounded bg-gray-100\"\r\n        style={{ minHeight: \"40px\", maxHeight: \"200px\" }}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n      >\r\n        Отправить\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAUe,SAAS,aAAa,EACnC,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,WAAW,EACL;IACN,qBACE,6VAAC;QACC,UAAU;QACV,WAAU;;0BAEV,6VAAC;gBACC,KAAK;gBACL,OAAO;gBACP,UAAU;gBACV,MAAM;gBACN,aAAY;gBACZ,WAAU;gBACV,OAAO;oBAAE,WAAW;oBAAQ,WAAW;gBAAQ;;;;;;0BAEjD,6VAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/KRB2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/_components/ticket/TticketView.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport MessageList from \"./messageList\";\r\nimport MessageInput from \"./messageInput\";\r\nimport { api } from \"~/trpc/react\";\r\n\r\nexport default function TicketView({\r\n  initialMessages,\r\n  ticketId,\r\n  userId,\r\n  role,\r\n  ticketStatus,\r\n}: {\r\n  initialMessages: {\r\n    message: string | null;\r\n    supportAgent?: boolean;\r\n    createdAt: string;\r\n    userId: string;\r\n  }[];\r\n  ticketId: string;\r\n  userId: string;\r\n  role: string | undefined;\r\n  ticketStatus: string | undefined;\r\n}) {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState<\r\n    {\r\n      message: string | null;\r\n      supportAgent?: boolean;\r\n      createdAt: string;\r\n      userId: string;\r\n    }[]\r\n  >(initialMessages);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const isSupport = role === \"ADMIN\" || role === \"WORKER\";\r\n\r\n  const addMessageMutation = api.ticket.addMessage.useMutation();\r\n  const updateTicketStatusMutation = api.ticket.updateTicketStatus.useMutation();\r\n\r\n  useEffect(() => {\r\n    if (role !== \"USER\" && ticketStatus === \"Sent\") {\r\n      updateTicketStatusMutation.mutate({\r\n        ticketId,\r\n        status: \"Read\",\r\n      });\r\n    }\r\n  }, [ticketId, role, ticketStatus]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const trimmed = input.trim();\r\n    if (!trimmed) return;\r\n\r\n    const newMessage = {\r\n      message: trimmed,\r\n      supportAgent: isSupport,\r\n      createdAt: new Date().toISOString(),\r\n      userId: userId || \"\",\r\n    };\r\n\r\n    setMessages((prev) => [...prev, newMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      await addMessageMutation.mutateAsync({\r\n        ticketId,\r\n        message: trimmed,\r\n      });\r\n\r\n      if (!isSupport) {\r\n        updateTicketStatusMutation.mutate({ ticketId, status: \"Sent\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка отправки сообщения:\", error);\r\n    } finally {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[calc(100vh-64px)]\">\r\n      <MessageList\r\n        messages={{ messages }}\r\n        isError={!!addMessageMutation.error}\r\n        messagesEndRef={messagesEndRef}\r\n        isLoading={false}\r\n        currentUserId={userId || \"\"}\r\n        role={role}\r\n      />\r\n      <MessageInput\r\n        input={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onSubmit={handleSubmit}\r\n        textareaRef={textareaRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS,WAAW,EACjC,eAAe,EACf,QAAQ,EACR,MAAM,EACN,IAAI,EACJ,YAAY,EAYb;IACC,MAAM,cAAc,CAAA,GAAA,oTAAA,CAAA,SAAM,AAAD,EAAuB;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAOrC;IACF,MAAM,iBAAiB,CAAA,GAAA,oTAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,YAAY,SAAS,WAAW,SAAS;IAE/C,MAAM,qBAAqB,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW;IAC5D,MAAM,6BAA6B,qHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW;IAE5E,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,UAAU,iBAAiB,QAAQ;YAC9C,2BAA2B,MAAM,CAAC;gBAChC;gBACA,QAAQ;YACV;QACF;IACF,GAAG;QAAC;QAAU;QAAM;KAAa;IAEjC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,MAAM,UAAU,MAAM,IAAI;QAC1B,IAAI,CAAC,SAAS;QAEd,MAAM,aAAa;YACjB,SAAS;YACT,cAAc;YACd,WAAW,IAAI,OAAO,WAAW;YACjC,QAAQ,UAAU;QACpB;QAEA,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAW;QAC3C,SAAS;QAET,IAAI;YACF,MAAM,mBAAmB,WAAW,CAAC;gBACnC;gBACA,SAAS;YACX;YAEA,IAAI,CAAC,WAAW;gBACd,2BAA2B,MAAM,CAAC;oBAAE;oBAAU,QAAQ;gBAAO;YAC/D;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,eAAe,OAAO,EAAE,eAAe;gBAAE,UAAU;YAAS;QAC9D;IACF;IAEA,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC,mJAAA,CAAA,UAAW;gBACV,UAAU;oBAAE;gBAAS;gBACrB,SAAS,CAAC,CAAC,mBAAmB,KAAK;gBACnC,gBAAgB;gBAChB,WAAW;gBACX,eAAe,UAAU;gBACzB,MAAM;;;;;;0BAER,6VAAC,oJAAA,CAAA,UAAY;gBACX,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,UAAU;gBACV,aAAa;;;;;;;;;;;;AAIrB"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}