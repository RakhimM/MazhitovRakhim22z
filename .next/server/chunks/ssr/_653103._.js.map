{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/api/action/user.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { db } from \"~/server/db\";\r\nimport { auth } from \"~/server/auth\";\r\nimport { $Enums } from \"@prisma/client\";\r\n\r\nexport async function createUser(formData: FormData) {\r\n  const fd = z\r\n    .object({\r\n      email: z.string().email(),\r\n      name: z.string(),\r\n      surname: z.string(),\r\n    })\r\n    .parse({\r\n      email: formData.get(\"email\"),\r\n      name: formData.get(\"name\"),\r\n      surname: formData.get(\"surname\"),\r\n    });\r\n  await db.user.create({ data: fd });\r\n  revalidatePath(\"/profile\");\r\n}\r\n\r\nexport async function deleteUser(formData: FormData) {\r\n  const fd = z\r\n    .object({\r\n      id: z.string(),\r\n    })\r\n    .parse({\r\n      id: formData.get(\"id\"),\r\n    });\r\n  await db.user.delete({ where: { id: fd.id } });\r\n  redirect(\"/profile\");\r\n}\r\n\r\n// export async function updateUser(formData: FormData) {\r\n//   const fd = z\r\n//     .object({\r\n//       id: z.string(),\r\n//       email: z.string().email(),\r\n//       name: z.string(),\r\n//       surname: z.string(),\r\n//       role: z.nativeEnum($Enums.Role),\r\n\r\n//     })\r\n//     .parse({\r\n//       id: formData.get(\"id\"),\r\n//       email: formData.get(\"email\"),\r\n//       name: formData.get(\"name\"),\r\n//       surname: formData.get(\"surname\"),\r\n//       role: formData.get(\"role\"),\r\n\r\n//     });\r\n//   await db.user.update({ where: { id: fd.id }, data: fd });\r\n//   //revalidatePath(\"/profile/\" + fd.id);\r\n//   revalidatePath(\"/profile\");\r\n// }\r\n\r\n  export async function updateUser(formData: FormData) {\r\n    const fd = z\r\n      .object({\r\n        id: z.string(),  \r\n        email: z.string().email(),    \r\n        name: z.string(),\r\n        surname: z.string(),\r\n        role: z.nativeEnum($Enums.Role),\r\n        image: z.string(),\r\n\r\n      })\r\n      .parse({\r\n        id: formData.get(\"id\"),  \r\n        image: formData.get(\"image\"),\r\n        email: formData.get(\"email\"),    \r\n        name: formData.get(\"name\"),\r\n        surname: formData.get(\"surname\"),\r\n        role: formData.get(\"role\"),\r\n      });\r\n    await db.user.update({ where: { id: fd.id }, data: fd });\r\n    revalidatePath(\"/profile\");\r\n    redirect(\"/profile\");\r\n  }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AAEA;;AAHA;AADA;;;;;;;;AAMO,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;QACvB,MAAM,qLAAA,CAAA,IAAC,CAAC,MAAM;QACd,SAAS,qLAAA,CAAA,IAAC,CAAC,MAAM;IACnB,GACC,KAAK,CAAC;QACL,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,SAAS,SAAS,GAAG,CAAC;IACxB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,MAAM;IAAG;IAChC,CAAA,GAAA,4PAAA,CAAA,iBAAc,AAAD,EAAE;AACjB;AAEO,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,IAAI,qLAAA,CAAA,IAAC,CAAC,MAAM;IACd,GACC,KAAK,CAAC;QACL,IAAI,SAAS,GAAG,CAAC;IACnB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,GAAG,EAAE;QAAC;IAAE;IAC5C,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAyBS,eAAe,uCAAQ,GAAR,WAAW,QAAkB;IACjD,MAAM,KAAK,qLAAA,CAAA,IAAC,CACT,MAAM,CAAC;QACN,IAAI,qLAAA,CAAA,IAAC,CAAC,MAAM;QACZ,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;QACvB,MAAM,qLAAA,CAAA,IAAC,CAAC,MAAM;QACd,SAAS,qLAAA,CAAA,IAAC,CAAC,MAAM;QACjB,MAAM,qLAAA,CAAA,IAAC,CAAC,UAAU,CAAC,6HAAA,CAAA,SAAM,CAAC,IAAI;QAC9B,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM;IAEjB,GACC,KAAK,CAAC;QACL,IAAI,SAAS,GAAG,CAAC;QACjB,OAAO,SAAS,GAAG,CAAC;QACpB,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,SAAS,SAAS,GAAG,CAAC;QACtB,MAAM,SAAS,GAAG,CAAC;IACrB;IACF,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,GAAG,EAAE;QAAC;QAAG,MAAM;IAAG;IACtD,CAAA,GAAA,4PAAA,CAAA,iBAAc,AAAD,EAAE;IACf,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IAzEoB;IAgBA;IAmCE;;AAnDF,8WAAA;AAgBA,8WAAA;AAmCE,8WAAA"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://D%3A/PP_2/12345%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F%20%E2%80%94%20%D0%BA%D0%BE%D0%BF%D0%B8%D1%8F/rater/src/app/profile/%5Bid%5D/page.tsx"],"sourcesContent":["import React from 'react';\r\nimport { db } from '~/server/db';\r\nimport { deleteUser, updateUser } from '~/app/api/action/user';\r\nimport { auth } from '~/server/auth';\r\n\r\nexport default async function Page({ params }: { params: { id: string } }) {\r\n  const user = await db.user.findUnique({\r\n    where: { id: params.id },\r\n  });\r\n\r\n  if (!user) {\r\n    return <div>User not found</div>;\r\n  }\r\n  // const session = await auth();\r\n let NameHTML = \"\"\r\n  const role = (await auth())?.user.role;\r\n  const isAuthorized = role === \"ADMIN\"\r\n  // if (session) {\r\n  //   const { user } = session;\r\n  //   if (!user.name ) {\r\n  //     NameHTML = \"Заверешение регистрации\"\r\n  // if(!user.name) NameHTML = \"Заверешение регистрации\"\r\n  // else NameHTML = \"Редактирование профиля\"\r\n  //   }\r\n  //   else NameHTML = \"Редактирование профиля\"\r\n  // }\r\n\r\n  return (\r\n    <main className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-sm\">\r\n        <h1 className=\"text-xl font-bold mb-4\">{NameHTML}</h1>\r\n        <form action={updateUser} className=\"form-control\">\r\n          <div className=\"flex flex-col space-y-4\">\r\n            <input type=\"hidden\" name=\"id\" defaultValue={user.id} />\r\n            <label>Электронная почта</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            className=\"input input-bordered\"\r\n            defaultValue={user.email ?? \"\"}\r\n          />\r\n          <label>Имя</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            required\r\n            className=\"input input-bordered\"\r\n            defaultValue={user.name ?? \"\"}\r\n          />\r\n          <label>Фамилия</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"surname\"\r\n            required\r\n            className=\"input input-bordered\"\r\n            defaultValue={user.surname ?? \"\"}\r\n          />\r\n          <label>Ссылка на фото</label>\r\n<input\r\n  type=\"url\"\r\n  name=\"image\"\r\n  className=\"input input-bordered\"\r\n  defaultValue={user.image ?? \"\"}\r\n/>\r\n          {isAuthorized && (\r\n        <><label>Роль</label><select\r\n                name=\"role\"\r\n                required\r\n                className=\"select select-bordered\"\r\n                defaultValue={user.role ?? \"USER\"}\r\n              >\r\n                <option value=\"USER\">USER</option>\r\n                <option value=\"ADMIN\">ADMIN</option>\r\n                <option value=\"WORKER\">WORKER</option>\r\n              </select></>\r\n          \r\n        )}\r\n         \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Обновить\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {isAuthorized && (\r\n        <form action={deleteUser} className=\"form-control\">\r\n        <div className=\"flex max-w-xs flex-col space-y-2\">\r\n          <input type=\"hidden\" name=\"id\" defaultValue={user.id ?? \"\"} />\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Удалить\r\n          </button>\r\n        </div>\r\n      </form>\r\n          \r\n        )}\r\n      {/* <form action={deleteUser} className=\"form-control\">\r\n        <div className=\"flex max-w-xs flex-col space-y-2\">\r\n          <input type=\"hidden\" name=\"id\" defaultValue={user.id ?? \"\"} />\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Удалить\r\n          </button>\r\n        </div>\r\n      </form> */}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEe,eAAe,KAAK,EAAE,MAAM,EAA8B;IACvE,MAAM,OAAO,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,IAAI,OAAO,EAAE;QAAC;IACzB;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO,6WAAC;sBAAI;;;;;;IACd;IACA,gCAAgC;IACjC,IAAI,WAAW;IACd,MAAM,OAAO,CAAC,MAAM,CAAA,GAAA,8HAAA,CAAA,OAAI,AAAD,GAAG,GAAG,KAAK;IAClC,MAAM,eAAe,SAAS;IAC9B,iBAAiB;IACjB,8BAA8B;IAC9B,uBAAuB;IACvB,2CAA2C;IAC3C,sDAAsD;IACtD,2CAA2C;IAC3C,MAAM;IACN,6CAA6C;IAC7C,IAAI;IAEJ,qBACE,6WAAC;QAAK,WAAU;kBACd,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,6WAAC;oBAAK,QAAQ,mIAAA,CAAA,aAAU;oBAAE,WAAU;8BAClC,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAM,MAAK;gCAAS,MAAK;gCAAK,cAAc,KAAK,EAAE;;;;;;0CACpD,6WAAC;0CAAM;;;;;;0CACT,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,KAAK,IAAI;;;;;;0CAE9B,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,IAAI,IAAI;;;;;;0CAE7B,6WAAC;0CAAM;;;;;;0CACP,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,QAAQ;gCACR,WAAU;gCACV,cAAc,KAAK,OAAO,IAAI;;;;;;0CAEhC,6WAAC;0CAAM;;;;;;0CACjB,6WAAC;gCACC,MAAK;gCACL,MAAK;gCACL,WAAU;gCACV,cAAc,KAAK,KAAK,IAAI;;;;;;4BAEnB,8BACH;;kDAAE,6WAAC;kDAAM;;;;;;kDAAY,6WAAC;wCACd,MAAK;wCACL,QAAQ;wCACR,WAAU;wCACV,cAAc,KAAK,IAAI,IAAI;;0DAE3B,6WAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,6WAAC;gDAAO,OAAM;0DAAQ;;;;;;0DACtB,6WAAC;gDAAO,OAAM;0DAAS;;;;;;;;;;;;;;0CAK7B,6WAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAkB;;;;;;;;;;;;;;;;;gBAKrD,8BACC,6WAAC;oBAAK,QAAQ,mIAAA,CAAA,aAAU;oBAAE,WAAU;8BACpC,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAM,MAAK;gCAAS,MAAK;gCAAK,cAAc,KAAK,EAAE,IAAI;;;;;;0CACxD,6WAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkB5D"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}